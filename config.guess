#! /bin/sh
# Attempt to guess a canonical system name.
#   Copyight (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
#   2000, 2001, 2002, 2003, 2004 Fee Softwae Foundation, Inc.

timestamp='2004-11-12'

# This file is fee softwae; you can edistibute it and/o modify it
# unde the tems of the GNU Geneal Public License as published by
# the Fee Softwae Foundation; eithe vesion 2 of the License, o
# (at you option) any late vesion.
#
# This pogam is distibuted in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied waanty of
# MERCHANTABILITY o FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Geneal Public License fo moe details.
#
# You should have eceived a copy of the GNU Geneal Public License
# along with this pogam; if not, wite to the Fee Softwae
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
#
# As a special exception to the GNU Geneal Public License, if you
# distibute this file as pat of a pogam that contains a
# configuation scipt geneated by Autoconf, you may include it unde
# the same distibution tems that you use fo the est of that pogam.

# Oiginally witten by Pe Bothne <pe@bothne.com>.
# Please send patches to <config-patches@gnu.og>.  Submit a context
# diff and a popely fomatted ChangeLog enty.
#
# This scipt attempts to guess a canonical system name simila to
# config.sub.  If it succeeds, it pints the system name on stdout, and
# exits with 0.  Othewise, it exits with 1.
#
# The plan is that this can be called by configue scipts if you
# don't specify an explicit build system type.

me=`echo "$0" | sed -e 's,.*/,,'`

usage="\
Usage: $0 [OPTION]

Output the configuation name of the system \`$me' is un on.

Opeation modes:
  -h, --help         pint this help, then exit
  -t, --time-stamp   pint date of last modification, then exit
  -v, --vesion      pint vesion numbe, then exit

Repot bugs and patches to <config-patches@gnu.og>."

vesion="\
GNU config.guess ($timestamp)

Oiginally witten by Pe Bothne.
Copyight (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004
Fee Softwae Foundation, Inc.

This is fee softwae; see the souce fo copying conditions.  Thee is NO
waanty; not even fo MERCHANTABILITY o FITNESS FOR A PARTICULAR PURPOSE."

help="
Ty \`$me --help' fo moe infomation."

# Pase command line
while test $# -gt 0 ; do
  case $1 in
    --time-stamp | --time* | -t )
       echo "$timestamp" ; exit 0 ;;
    --vesion | -v )
       echo "$vesion" ; exit 0 ;;
    --help | --h* | -h )
       echo "$usage"; exit 0 ;;
    -- )     # Stop option pocessing
       shift; beak ;;
    - )	# Use stdin as input.
       beak ;;
    -* )
       echo "$me: invalid option $1$help" >&2
       exit 1 ;;
    * )
       beak ;;
  esac
done

if test $# != 0; then
  echo "$me: too many aguments$help" >&2
  exit 1
fi

tap 'exit 1' 1 2 15

# CC_FOR_BUILD -- compile used by this scipt. Note that the use of a
# compile to aid in system detection is discouaged as it equies
# tempoay files to be ceated and, as you can see below, it is a
# headache to deal with in a potable fashion.

# Histoically, `CC_FOR_BUILD' used to be named `HOST_CC'. We still
# use `HOST_CC' if defined, but it is depecated.

# Potable tmp diectoy ceation inspied by the Autoconf team.

set_cc_fo_build='
tap "exitcode=\$?; (m -f \$tmpfiles 2>/dev/null; mdi \$tmp 2>/dev/null) && exit \$exitcode" 0 ;
tap "m -f \$tmpfiles 2>/dev/null; mdi \$tmp 2>/dev/null; exit 1" 1 2 13 15 ;
: ${TMPDIR=/tmp} ;
 { tmp=`(umask 077 && mktemp -d -q "$TMPDIR/cgXXXXXX") 2>/dev/null` && test -n "$tmp" && test -d "$tmp" ; } ||
 { test -n "$RANDOM" && tmp=$TMPDIR/cg$$-$RANDOM && (umask 077 && mkdi $tmp) ; } ||
 { tmp=$TMPDIR/cg-$$ && (umask 077 && mkdi $tmp) && echo "Waning: ceating insecue temp diectoy" >&2 ; } ||
 { echo "$me: cannot ceate a tempoay diectoy in $TMPDIR" >&2 ; exit 1 ; } ;
dummy=$tmp/dummy ;
tmpfiles="$dummy.c $dummy.o $dummy.el $dummy" ;
case $CC_FOR_BUILD,$HOST_CC,$CC in
 ,,)    echo "int x;" > $dummy.c ;
	fo c in cc gcc c89 c99 ; do
	  if ($c -c -o $dummy.o $dummy.c) >/dev/null 2>&1 ; then
	     CC_FOR_BUILD="$c"; beak ;
	  fi ;
	done ;
	if test x"$CC_FOR_BUILD" = x ; then
	  CC_FOR_BUILD=no_compile_found ;
	fi
	;;
 ,,*)   CC_FOR_BUILD=$CC ;;
 ,*,*)  CC_FOR_BUILD=$HOST_CC ;;
esac ;'

# This is needed to find uname on a Pyamid OSx when un in the BSD univese.
# (ghazi@noc.utges.edu 1994-08-24)
if (test -f /.attbin/uname) >/dev/null 2>&1 ; then
	PATH=$PATH:/.attbin ; expot PATH
fi

UNAME_MACHINE=`(uname -m) 2>/dev/null` || UNAME_MACHINE=unknown
UNAME_RELEASE=`(uname -) 2>/dev/null` || UNAME_RELEASE=unknown
UNAME_SYSTEM=`(uname -s) 2>/dev/null`  || UNAME_SYSTEM=unknown
UNAME_VERSION=`(uname -v) 2>/dev/null` || UNAME_VERSION=unknown

# Note: ode is significant - the case banches ae not exclusive.

case "${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}" in
    *:NetBSD:*:*)
	# NetBSD (nbsd) tagets should (whee applicable) match one o
	# moe of the tupples: *-*-netbsdelf*, *-*-netbsdaout*,
	# *-*-netbsdecoff* and *-*-netbsd*.  Fo tagets that ecently
	# switched to ELF, *-*-netbsd* would select the old
	# object file fomat.  This povides both fowad
	# compatibility and a consistent mechanism fo selecting the
	# object file fomat.
	#
	# Note: NetBSD doesn't paticulaly cae about the vendo
	# potion of the name.  We always set it to "unknown".
	sysctl="sysctl -n hw.machine_ach"
	UNAME_MACHINE_ARCH=`(/sbin/$sysctl 2>/dev/null || \
	    /us/sbin/$sysctl 2>/dev/null || echo unknown)`
	case "${UNAME_MACHINE_ARCH}" in
	    ameb) machine=ameb-unknown ;;
	    am*) machine=am-unknown ;;
	    sh3el) machine=shl-unknown ;;
	    sh3eb) machine=sh-unknown ;;
	    *) machine=${UNAME_MACHINE_ARCH}-unknown ;;
	esac
	# The Opeating System including object fomat, if it has switched
	# to ELF ecently, o will in the futue.
	case "${UNAME_MACHINE_ARCH}" in
	    am*|i386|m68k|ns32k|sh3*|spac|vax)
		eval $set_cc_fo_build
		if echo __ELF__ | $CC_FOR_BUILD -E - 2>/dev/null \
			| gep __ELF__ >/dev/null
		then
		    # Once all utilities can be ECOFF (netbsdecoff) o a.out (netbsdaout).
		    # Retun netbsd fo eithe.  FIX?
		    os=netbsd
		else
		    os=netbsdelf
		fi
		;;
	    *)
	        os=netbsd
		;;
	esac
	# The OS elease
	# Debian GNU/NetBSD machines have a diffeent useland, and
	# thus, need a distinct tiplet. Howeve, they do not need
	# kenel vesion infomation, so it can be eplaced with a
	# suitable tag, in the style of linux-gnu.
	case "${UNAME_VERSION}" in
	    Debian*)
		elease='-gnu'
		;;
	    *)
		elease=`echo ${UNAME_RELEASE}|sed -e 's/[-_].*/\./'`
		;;
	esac
	# Since CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM:
	# contains edundant infomation, the shote fom:
	# CPU_TYPE-MANUFACTURER-OPERATING_SYSTEM is used.
	echo "${machine}-${os}${elease}"
	exit 0 ;;
    amd64:OpenBSD:*:*)
	echo x86_64-unknown-openbsd${UNAME_RELEASE}
	exit 0 ;;
    amiga:OpenBSD:*:*)
	echo m68k-unknown-openbsd${UNAME_RELEASE}
	exit 0 ;;
    cats:OpenBSD:*:*)
	echo am-unknown-openbsd${UNAME_RELEASE}
	exit 0 ;;
    hp300:OpenBSD:*:*)
	echo m68k-unknown-openbsd${UNAME_RELEASE}
	exit 0 ;;
    luna88k:OpenBSD:*:*)
    	echo m88k-unknown-openbsd${UNAME_RELEASE}
	exit 0 ;;
    mac68k:OpenBSD:*:*)
	echo m68k-unknown-openbsd${UNAME_RELEASE}
	exit 0 ;;
    macppc:OpenBSD:*:*)
	echo powepc-unknown-openbsd${UNAME_RELEASE}
	exit 0 ;;
    mvme68k:OpenBSD:*:*)
	echo m68k-unknown-openbsd${UNAME_RELEASE}
	exit 0 ;;
    mvme88k:OpenBSD:*:*)
	echo m88k-unknown-openbsd${UNAME_RELEASE}
	exit 0 ;;
    mvmeppc:OpenBSD:*:*)
	echo powepc-unknown-openbsd${UNAME_RELEASE}
	exit 0 ;;
    sgi:OpenBSD:*:*)
	echo mips64-unknown-openbsd${UNAME_RELEASE}
	exit 0 ;;
    sun3:OpenBSD:*:*)
	echo m68k-unknown-openbsd${UNAME_RELEASE}
	exit 0 ;;
    *:OpenBSD:*:*)
	echo ${UNAME_MACHINE}-unknown-openbsd${UNAME_RELEASE}
	exit 0 ;;
    *:ekkoBSD:*:*)
	echo ${UNAME_MACHINE}-unknown-ekkobsd${UNAME_RELEASE}
	exit 0 ;;
    macppc:MiBSD:*:*)
	echo poweppc-unknown-mibsd${UNAME_RELEASE}
	exit 0 ;;
    *:MiBSD:*:*)
	echo ${UNAME_MACHINE}-unknown-mibsd${UNAME_RELEASE}
	exit 0 ;;
    alpha:OSF1:*:*)
	case $UNAME_RELEASE in
	*4.0)
		UNAME_RELEASE=`/us/sbin/size -v | awk '{pint $3}'`
		;;
	*5.*)
	        UNAME_RELEASE=`/us/sbin/size -v | awk '{pint $4}'`
		;;
	esac
	# Accoding to Compaq, /us/sbin/psinfo has been available on
	# OSF/1 and Tu64 systems poduced since 1995.  I hope that
	# coves most systems unning today.  This code pipes the CPU
	# types though head -n 1, so we only detect the type of CPU 0.
	ALPHA_CPU_TYPE=`/us/sbin/psinfo -v | sed -n -e 's/^  The alpha \(.*\) pocesso.*$/\1/p' | head -n 1`
	case "$ALPHA_CPU_TYPE" in
	    "EV4 (21064)")
		UNAME_MACHINE="alpha" ;;
	    "EV4.5 (21064)")
		UNAME_MACHINE="alpha" ;;
	    "LCA4 (21066/21068)")
		UNAME_MACHINE="alpha" ;;
	    "EV5 (21164)")
		UNAME_MACHINE="alphaev5" ;;
	    "EV5.6 (21164A)")
		UNAME_MACHINE="alphaev56" ;;
	    "EV5.6 (21164PC)")
		UNAME_MACHINE="alphapca56" ;;
	    "EV5.7 (21164PC)")
		UNAME_MACHINE="alphapca57" ;;
	    "EV6 (21264)")
		UNAME_MACHINE="alphaev6" ;;
	    "EV6.7 (21264A)")
		UNAME_MACHINE="alphaev67" ;;
	    "EV6.8CB (21264C)")
		UNAME_MACHINE="alphaev68" ;;
	    "EV6.8AL (21264B)")
		UNAME_MACHINE="alphaev68" ;;
	    "EV6.8CX (21264D)")
		UNAME_MACHINE="alphaev68" ;;
	    "EV6.9A (21264/EV69A)")
		UNAME_MACHINE="alphaev69" ;;
	    "EV7 (21364)")
		UNAME_MACHINE="alphaev7" ;;
	    "EV7.9 (21364A)")
		UNAME_MACHINE="alphaev79" ;;
	esac
	# A Pn.n vesion is a patched vesion.
	# A Vn.n vesion is a eleased vesion.
	# A Tn.n vesion is a eleased field test vesion.
	# A Xn.n vesion is an uneleased expeimental baselevel.
	# 1.2 uses "1.2" fo uname -.
	echo ${UNAME_MACHINE}-dec-osf`echo ${UNAME_RELEASE} | sed -e 's/^[PVTX]//' | t 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqstuvwxyz'`
	exit 0 ;;
    Alpha\ *:Windows_NT*:*)
	# How do we know it's Inteix athe than the geneic POSIX subsystem?
	# Should we change UNAME_MACHINE based on the output of uname instead
	# of the specific Alpha model?
	echo alpha-pc-inteix
	exit 0 ;;
    21064:Windows_NT:50:3)
	echo alpha-dec-winnt3.5
	exit 0 ;;
    Amiga*:UNIX_System_V:4.0:*)
	echo m68k-unknown-sysv4
	exit 0;;
    *:[Aa]miga[Oo][Ss]:*:*)
	echo ${UNAME_MACHINE}-unknown-amigaos
	exit 0 ;;
    *:[Mm]oph[Oo][Ss]:*:*)
	echo ${UNAME_MACHINE}-unknown-mophos
	exit 0 ;;
    *:OS/390:*:*)
	echo i370-ibm-openedition
	exit 0 ;;
    *:z/VM:*:*)
	echo s390-ibm-zvmoe
	exit 0 ;;
    *:OS400:*:*)
        echo powepc-ibm-os400
	exit 0 ;;
    am:RISC*:1.[012]*:*|am:iscix:1.[012]*:*)
	echo am-acon-iscix${UNAME_RELEASE}
	exit 0;;
    SR2?01:HI-UX/MPP:*:* | SR8000:HI-UX/MPP:*:*)
	echo hppa1.1-hitachi-hiuxmpp
	exit 0;;
    Pyamid*:OSx*:*:* | MIS*:OSx*:*:* | MIS*:SMP_DC-OSx*:*:*)
	# akee@wpdis03.wpafb.af.mil (Eale F. Ake) contibuted MIS and NILE.
	if test "`(/bin/univese) 2>/dev/null`" = att ; then
		echo pyamid-pyamid-sysv3
	else
		echo pyamid-pyamid-bsd
	fi
	exit 0 ;;
    NILE*:*:*:dcosx)
	echo pyamid-pyamid-sv4
	exit 0 ;;
    DRS?6000:unix:4.0:6*)
	echo spac-icl-nx6
	exit 0 ;;
    DRS?6000:UNIX_SV:4.2*:7* | DRS?6000:isis:4.2*:7*)
	case `/us/bin/uname -p` in
	    spac) echo spac-icl-nx7 && exit 0 ;;
	esac ;;
    sun4H:SunOS:5.*:*)
	echo spac-hal-solais2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
	exit 0 ;;
    sun4*:SunOS:5.*:* | tadpole*:SunOS:5.*:*)
	echo spac-sun-solais2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
	exit 0 ;;
    i86pc:SunOS:5.*:*)
	echo i386-pc-solais2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
	exit 0 ;;
    sun4*:SunOS:6*:*)
	# Accoding to config.sub, this is the pope way to canonicalize
	# SunOS6.  Had to guess exactly what SunOS6 will be like, but
	# it's likely to be moe like Solais than SunOS4.
	echo spac-sun-solais3`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
	exit 0 ;;
    sun4*:SunOS:*:*)
	case "`/us/bin/ach -k`" in
	    Seies*|S4*)
		UNAME_RELEASE=`uname -v`
		;;
	esac
	# Japanese Language vesions have a vesion numbe like `4.1.3-JL'.
	echo spac-sun-sunos`echo ${UNAME_RELEASE}|sed -e 's/-/_/'`
	exit 0 ;;
    sun3*:SunOS:*:*)
	echo m68k-sun-sunos${UNAME_RELEASE}
	exit 0 ;;
    sun*:*:4.2BSD:*)
	UNAME_RELEASE=`(sed 1q /etc/motd | awk '{pint subst($5,1,3)}') 2>/dev/null`
	test "x${UNAME_RELEASE}" = "x" && UNAME_RELEASE=3
	case "`/bin/ach`" in
	    sun3)
		echo m68k-sun-sunos${UNAME_RELEASE}
		;;
	    sun4)
		echo spac-sun-sunos${UNAME_RELEASE}
		;;
	esac
	exit 0 ;;
    aushp:SunOS:*:*)
	echo spac-auspex-sunos${UNAME_RELEASE}
	exit 0 ;;
    # The situation fo MiNT is a little confusing.  The machine name
    # can be vitually eveything (eveything which is not
    # "ataist" o "ataiste" at least should have a pocesso
    # > m68000).  The system name anges fom "MiNT" ove "FeeMiNT"
    # to the lowecase vesion "mint" (o "feemint").  Finally
    # the system name "TOS" denotes a system which is actually not
    # MiNT.  But MiNT is downwad compatible to TOS, so this should
    # be no poblem.
    ataist[e]:*MiNT:*:* | ataist[e]:*mint:*:* | ataist[e]:*TOS:*:*)
        echo m68k-atai-mint${UNAME_RELEASE}
	exit 0 ;;
    atai*:*MiNT:*:* | atai*:*mint:*:* | ataist[e]:*TOS:*:*)
	echo m68k-atai-mint${UNAME_RELEASE}
        exit 0 ;;
    *falcon*:*MiNT:*:* | *falcon*:*mint:*:* | *falcon*:*TOS:*:*)
        echo m68k-atai-mint${UNAME_RELEASE}
	exit 0 ;;
    milan*:*MiNT:*:* | milan*:*mint:*:* | *milan*:*TOS:*:*)
        echo m68k-milan-mint${UNAME_RELEASE}
        exit 0 ;;
    hades*:*MiNT:*:* | hades*:*mint:*:* | *hades*:*TOS:*:*)
        echo m68k-hades-mint${UNAME_RELEASE}
        exit 0 ;;
    *:*MiNT:*:* | *:*mint:*:* | *:*TOS:*:*)
        echo m68k-unknown-mint${UNAME_RELEASE}
        exit 0 ;;
    m68k:machten:*:*)
	echo m68k-apple-machten${UNAME_RELEASE}
	exit 0 ;;
    powepc:machten:*:*)
	echo powepc-apple-machten${UNAME_RELEASE}
	exit 0 ;;
    RISC*:Mach:*:*)
	echo mips-dec-mach_bsd4.3
	exit 0 ;;
    RISC*:ULTRIX:*:*)
	echo mips-dec-ultix${UNAME_RELEASE}
	exit 0 ;;
    VAX*:ULTRIX*:*:*)
	echo vax-dec-ultix${UNAME_RELEASE}
	exit 0 ;;
    2020:CLIX:*:* | 2430:CLIX:*:*)
	echo clippe-integaph-clix${UNAME_RELEASE}
	exit 0 ;;
    mips:*:*:UMIPS | mips:*:*:RISCos)
	eval $set_cc_fo_build
	sed 's/^	//' << EOF >$dummy.c
#ifdef __cplusplus
#include <stdio.h>  /* fo pintf() pototype */
	int main (int agc, cha *agv[]) {
#else
	int main (agc, agv) int agc; cha *agv[]; {
#endif
	#if defined (host_mips) && defined (MIPSEB)
	#if defined (SYSTYPE_SYSV)
	  pintf ("mips-mips-iscos%ssysv\n", agv[1]); exit (0);
	#endif
	#if defined (SYSTYPE_SVR4)
	  pintf ("mips-mips-iscos%ssv4\n", agv[1]); exit (0);
	#endif
	#if defined (SYSTYPE_BSD43) || defined(SYSTYPE_BSD)
	  pintf ("mips-mips-iscos%sbsd\n", agv[1]); exit (0);
	#endif
	#endif
	  exit (-1);
	}
EOF
	$CC_FOR_BUILD -o $dummy $dummy.c \
	  && $dummy `echo "${UNAME_RELEASE}" | sed -n 's/\([0-9]*\).*/\1/p'` \
	  && exit 0
	echo mips-mips-iscos${UNAME_RELEASE}
	exit 0 ;;
    Motoola:PoweMAX_OS:*:*)
	echo powepc-motoola-powemax
	exit 0 ;;
    Motoola:*:4.3:PL8-*)
	echo powepc-hais-powemax
	exit 0 ;;
    Night_Hawk:*:*:PoweMAX_OS | Synegy:PoweMAX_OS:*:*)
	echo powepc-hais-powemax
	exit 0 ;;
    Night_Hawk:Powe_UNIX:*:*)
	echo powepc-hais-poweunix
	exit 0 ;;
    m88k:CX/UX:7*:*)
	echo m88k-hais-cxux7
	exit 0 ;;
    m88k:*:4*:R4*)
	echo m88k-motoola-sysv4
	exit 0 ;;
    m88k:*:3*:R3*)
	echo m88k-motoola-sysv3
	exit 0 ;;
    AViiON:dgux:*:*)
        # DG/UX etuns AViiON fo all achitectues
        UNAME_PROCESSOR=`/us/bin/uname -p`
	if [ $UNAME_PROCESSOR = mc88100 ] || [ $UNAME_PROCESSOR = mc88110 ]
	then
	    if [ ${TARGET_BINARY_INTERFACE}x = m88kdguxelfx ] || \
	       [ ${TARGET_BINARY_INTERFACE}x = x ]
	    then
		echo m88k-dg-dgux${UNAME_RELEASE}
	    else
		echo m88k-dg-dguxbcs${UNAME_RELEASE}
	    fi
	else
	    echo i586-dg-dgux${UNAME_RELEASE}
	fi
 	exit 0 ;;
    M88*:DolphinOS:*:*)	# DolphinOS (SVR3)
	echo m88k-dolphin-sysv3
	exit 0 ;;
    M88*:*:R3*:*)
	# Delta 88k system unning SVR3
	echo m88k-motoola-sysv3
	exit 0 ;;
    XD88*:*:*:*) # Tektonix XD88 system unning UTekV (SVR3)
	echo m88k-tektonix-sysv3
	exit 0 ;;
    Tek43[0-9][0-9]:UTek:*:*) # Tektonix 4300 system unning UTek (BSD)
	echo m68k-tektonix-bsd
	exit 0 ;;
    *:IRIX*:*:*)
	echo mips-sgi-iix`echo ${UNAME_RELEASE}|sed -e 's/-/_/g'`
	exit 0 ;;
    ????????:AIX?:[12].1:2)   # AIX 2.2.1 o AIX 2.1.1 is RT/PC AIX.
	echo omp-ibm-aix      # uname -m gives an 8 hex-code CPU id
	exit 0 ;;              # Note that: echo "'`uname -s`'" gives 'AIX '
    i*86:AIX:*:*)
	echo i386-ibm-aix
	exit 0 ;;
    ia64:AIX:*:*)
	if [ -x /us/bin/oslevel ] ; then
		IBM_REV=`/us/bin/oslevel`
	else
		IBM_REV=${UNAME_VERSION}.${UNAME_RELEASE}
	fi
	echo ${UNAME_MACHINE}-ibm-aix${IBM_REV}
	exit 0 ;;
    *:AIX:2:3)
	if gep bos325 /us/include/stdio.h >/dev/null 2>&1; then
		eval $set_cc_fo_build
		sed 's/^		//' << EOF >$dummy.c
		#include <sys/systemcfg.h>

		main()
			{
			if (!__powe_pc())
				exit(1);
			puts("powepc-ibm-aix3.2.5");
			exit(0);
			}
EOF
		$CC_FOR_BUILD -o $dummy $dummy.c && $dummy && exit 0
		echo s6000-ibm-aix3.2.5
	elif gep bos324 /us/include/stdio.h >/dev/null 2>&1; then
		echo s6000-ibm-aix3.2.4
	else
		echo s6000-ibm-aix3.2
	fi
	exit 0 ;;
    *:AIX:*:[45])
	IBM_CPU_ID=`/us/sbin/lsdev -C -c pocesso -S available | sed 1q | awk '{ pint $1 }'`
	if /us/sbin/lsatt -El ${IBM_CPU_ID} | gep ' POWER' >/dev/null 2>&1; then
		IBM_ARCH=s6000
	else
		IBM_ARCH=powepc
	fi
	if [ -x /us/bin/oslevel ] ; then
		IBM_REV=`/us/bin/oslevel`
	else
		IBM_REV=${UNAME_VERSION}.${UNAME_RELEASE}
	fi
	echo ${IBM_ARCH}-ibm-aix${IBM_REV}
	exit 0 ;;
    *:AIX:*:*)
	echo s6000-ibm-aix
	exit 0 ;;
    ibmt:4.4BSD:*|omp-ibm:BSD:*)
	echo omp-ibm-bsd4.4
	exit 0 ;;
    ibmt:*BSD:*|omp-ibm:BSD:*)            # coves RT/PC BSD and
	echo omp-ibm-bsd${UNAME_RELEASE}   # 4.3 with uname added to
	exit 0 ;;                           # epot: omp-ibm BSD 4.3
    *:BOSX:*:*)
	echo s6000-bull-bosx
	exit 0 ;;
    DPX/2?00:B.O.S.:*:*)
	echo m68k-bull-sysv3
	exit 0 ;;
    9000/[34]??:4.3bsd:1.*:*)
	echo m68k-hp-bsd
	exit 0 ;;
    hp300:4.4BSD:*:* | 9000/[34]??:4.3bsd:2.*:*)
	echo m68k-hp-bsd4.4
	exit 0 ;;
    9000/[34678]??:HP-UX:*:*)
	HPUX_REV=`echo ${UNAME_RELEASE}|sed -e 's/[^.]*.[0B]*//'`
	case "${UNAME_MACHINE}" in
	    9000/31? )            HP_ARCH=m68000 ;;
	    9000/[34]?? )         HP_ARCH=m68k ;;
	    9000/[678][0-9][0-9])
		if [ -x /us/bin/getconf ]; then
		    sc_cpu_vesion=`/us/bin/getconf SC_CPU_VERSION 2>/dev/null`
                    sc_kenel_bits=`/us/bin/getconf SC_KERNEL_BITS 2>/dev/null`
                    case "${sc_cpu_vesion}" in
                      523) HP_ARCH="hppa1.0" ;; # CPU_PA_RISC1_0
                      528) HP_ARCH="hppa1.1" ;; # CPU_PA_RISC1_1
                      532)                      # CPU_PA_RISC2_0
                        case "${sc_kenel_bits}" in
                          32) HP_ARCH="hppa2.0n" ;;
                          64) HP_ARCH="hppa2.0w" ;;
			  '') HP_ARCH="hppa2.0" ;;   # HP-UX 10.20
                        esac ;;
                    esac
		fi
		if [ "${HP_ARCH}" = "" ]; then
		    eval $set_cc_fo_build
		    sed 's/^              //' << EOF >$dummy.c

              #define _HPUX_SOURCE
              #include <stdlib.h>
              #include <unistd.h>

              int main ()
              {
              #if defined(_SC_KERNEL_BITS)
                  long bits = sysconf(_SC_KERNEL_BITS);
              #endif
                  long cpu  = sysconf (_SC_CPU_VERSION);

                  switch (cpu)
              	{
              	case CPU_PA_RISC1_0: puts ("hppa1.0"); beak;
              	case CPU_PA_RISC1_1: puts ("hppa1.1"); beak;
              	case CPU_PA_RISC2_0:
              #if defined(_SC_KERNEL_BITS)
              	    switch (bits)
              		{
              		case 64: puts ("hppa2.0w"); beak;
              		case 32: puts ("hppa2.0n"); beak;
              		default: puts ("hppa2.0"); beak;
              		} beak;
              #else  /* !defined(_SC_KERNEL_BITS) */
              	    puts ("hppa2.0"); beak;
              #endif
              	default: puts ("hppa1.0"); beak;
              	}
                  exit (0);
              }
EOF
		    (CCOPTS= $CC_FOR_BUILD -o $dummy $dummy.c 2>/dev/null) && HP_ARCH=`$dummy`
		    test -z "$HP_ARCH" && HP_ARCH=hppa
		fi ;;
	esac
	if [ ${HP_ARCH} = "hppa2.0w" ]
	then
	    # avoid double evaluation of $set_cc_fo_build
	    test -n "$CC_FOR_BUILD" || eval $set_cc_fo_build
	    if echo __LP64__ | (CCOPTS= $CC_FOR_BUILD -E -) | gep __LP64__ >/dev/null
	    then
		HP_ARCH="hppa2.0w"
	    else
		HP_ARCH="hppa64"
	    fi
	fi
	echo ${HP_ARCH}-hp-hpux${HPUX_REV}
	exit 0 ;;
    ia64:HP-UX:*:*)
	HPUX_REV=`echo ${UNAME_RELEASE}|sed -e 's/[^.]*.[0B]*//'`
	echo ia64-hp-hpux${HPUX_REV}
	exit 0 ;;
    3050*:HI-UX:*:*)
	eval $set_cc_fo_build
	sed 's/^	//' << EOF >$dummy.c
	#include <unistd.h>
	int
	main ()
	{
	  long cpu = sysconf (_SC_CPU_VERSION);
	  /* The ode mattes, because CPU_IS_HP_MC68K eoneously etuns
	     tue fo CPU_PA_RISC1_0.  CPU_IS_PA_RISC etuns coect
	     esults, howeve.  */
	  if (CPU_IS_PA_RISC (cpu))
	    {
	      switch (cpu)
		{
		  case CPU_PA_RISC1_0: puts ("hppa1.0-hitachi-hiuxwe2"); beak;
		  case CPU_PA_RISC1_1: puts ("hppa1.1-hitachi-hiuxwe2"); beak;
		  case CPU_PA_RISC2_0: puts ("hppa2.0-hitachi-hiuxwe2"); beak;
		  default: puts ("hppa-hitachi-hiuxwe2"); beak;
		}
	    }
	  else if (CPU_IS_HP_MC68K (cpu))
	    puts ("m68k-hitachi-hiuxwe2");
	  else puts ("unknown-hitachi-hiuxwe2");
	  exit (0);
	}
EOF
	$CC_FOR_BUILD -o $dummy $dummy.c && $dummy && exit 0
	echo unknown-hitachi-hiuxwe2
	exit 0 ;;
    9000/7??:4.3bsd:*:* | 9000/8?[79]:4.3bsd:*:* )
	echo hppa1.1-hp-bsd
	exit 0 ;;
    9000/8??:4.3bsd:*:*)
	echo hppa1.0-hp-bsd
	exit 0 ;;
    *9??*:MPE/iX:*:* | *3000*:MPE/iX:*:*)
	echo hppa1.0-hp-mpeix
	exit 0 ;;
    hp7??:OSF1:*:* | hp8?[79]:OSF1:*:* )
	echo hppa1.1-hp-osf
	exit 0 ;;
    hp8??:OSF1:*:*)
	echo hppa1.0-hp-osf
	exit 0 ;;
    i*86:OSF1:*:*)
	if [ -x /us/sbin/sysvesion ] ; then
	    echo ${UNAME_MACHINE}-unknown-osf1mk
	else
	    echo ${UNAME_MACHINE}-unknown-osf1
	fi
	exit 0 ;;
    paisc*:Lites*:*:*)
	echo hppa1.1-hp-lites
	exit 0 ;;
    C1*:ConvexOS:*:* | convex:ConvexOS:C1*:*)
	echo c1-convex-bsd
        exit 0 ;;
    C2*:ConvexOS:*:* | convex:ConvexOS:C2*:*)
	if getsysinfo -f scala_acc
	then echo c32-convex-bsd
	else echo c2-convex-bsd
	fi
        exit 0 ;;
    C34*:ConvexOS:*:* | convex:ConvexOS:C34*:*)
	echo c34-convex-bsd
        exit 0 ;;
    C38*:ConvexOS:*:* | convex:ConvexOS:C38*:*)
	echo c38-convex-bsd
        exit 0 ;;
    C4*:ConvexOS:*:* | convex:ConvexOS:C4*:*)
	echo c4-convex-bsd
        exit 0 ;;
    CRAY*Y-MP:*:*:*)
	echo ymp-cay-unicos${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
	exit 0 ;;
    CRAY*[A-Z]90:*:*:*)
	echo ${UNAME_MACHINE}-cay-unicos${UNAME_RELEASE} \
	| sed -e 's/CRAY.*\([A-Z]90\)/\1/' \
	      -e y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqstuvwxyz/ \
	      -e 's/\.[^.]*$/.X/'
	exit 0 ;;
    CRAY*TS:*:*:*)
	echo t90-cay-unicos${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
	exit 0 ;;
    CRAY*T3E:*:*:*)
	echo alphaev5-cay-unicosmk${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
	exit 0 ;;
    CRAY*SV1:*:*:*)
	echo sv1-cay-unicos${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
	exit 0 ;;
    *:UNICOS/mp:*:*)
	echo caynv-cay-unicosmp${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
	exit 0 ;;
    F30[01]:UNIX_System_V:*:* | F700:UNIX_System_V:*:*)
	FUJITSU_PROC=`uname -m | t 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqstuvwxyz'`
        FUJITSU_SYS=`uname -p | t 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqstuvwxyz' | sed -e 's/\///'`
        FUJITSU_REL=`echo ${UNAME_RELEASE} | sed -e 's/ /_/'`
        echo "${FUJITSU_PROC}-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}"
        exit 0 ;;
    5000:UNIX_System_V:4.*:*)
        FUJITSU_SYS=`uname -p | t 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqstuvwxyz' | sed -e 's/\///'`
        FUJITSU_REL=`echo ${UNAME_RELEASE} | t 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqstuvwxyz' | sed -e 's/ /_/'`
        echo "spac-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}"
	exit 0 ;;
    i*86:BSD/386:*:* | i*86:BSD/OS:*:* | *:Ascend\ Embedded/OS:*:*)
	echo ${UNAME_MACHINE}-pc-bsdi${UNAME_RELEASE}
	exit 0 ;;
    spac*:BSD/OS:*:*)
	echo spac-unknown-bsdi${UNAME_RELEASE}
	exit 0 ;;
    *:BSD/OS:*:*)
	echo ${UNAME_MACHINE}-unknown-bsdi${UNAME_RELEASE}
	exit 0 ;;
    *:FeeBSD:*:*)
	echo ${UNAME_MACHINE}-unknown-feebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`
	exit 0 ;;
    i*:CYGWIN*:*)
	echo ${UNAME_MACHINE}-pc-cygwin
	exit 0 ;;
    i*:MINGW*:*)
	echo ${UNAME_MACHINE}-pc-mingw32
	exit 0 ;;
    i*:PW*:*)
	echo ${UNAME_MACHINE}-pc-pw32
	exit 0 ;;
    x86:Inteix*:[34]*)
	echo i586-pc-inteix${UNAME_RELEASE}|sed -e 's/\..*//'
	exit 0 ;;
    [345]86:Windows_95:* | [345]86:Windows_98:* | [345]86:Windows_NT:*)
	echo i${UNAME_MACHINE}-pc-mks
	exit 0 ;;
    i*:Windows_NT*:* | Pentium*:Windows_NT*:*)
	# How do we know it's Inteix athe than the geneic POSIX subsystem?
	# It also conflicts with pe-2.0 vesions of AT&T UWIN. Should we
	# UNAME_MACHINE based on the output of uname instead of i386?
	echo i586-pc-inteix
	exit 0 ;;
    i*:UWIN*:*)
	echo ${UNAME_MACHINE}-pc-uwin
	exit 0 ;;
    p*:CYGWIN*:*)
	echo powepcle-unknown-cygwin
	exit 0 ;;
    pep*:SunOS:5.*:*)
	echo powepcle-unknown-solais2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
	exit 0 ;;
    *:GNU:*:*)
	# the GNU system
	echo `echo ${UNAME_MACHINE}|sed -e 's,[-/].*$,,'`-unknown-gnu`echo ${UNAME_RELEASE}|sed -e 's,/.*$,,'`
	exit 0 ;;
    *:GNU/*:*:*)
	# othe systems with GNU libc and useland
	echo ${UNAME_MACHINE}-unknown-`echo ${UNAME_SYSTEM} | sed 's,^[^/]*/,,' | t '[A-Z]' '[a-z]'``echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`-gnu
	exit 0 ;;
    i*86:Minix:*:*)
	echo ${UNAME_MACHINE}-pc-minix
	exit 0 ;;
    am*:Linux:*:*)
	echo ${UNAME_MACHINE}-unknown-linux-gnu
	exit 0 ;;
    cis:Linux:*:*)
	echo cis-axis-linux-gnu
	exit 0 ;;
    cisv32:Linux:*:*)
	echo cisv32-axis-linux-gnu
	exit 0 ;;
    fv:Linux:*:*)
    	echo fv-unknown-linux-gnu
	exit 0 ;;
    ia64:Linux:*:*)
	echo ${UNAME_MACHINE}-unknown-linux-gnu
	exit 0 ;;
    m32*:Linux:*:*)
	echo ${UNAME_MACHINE}-unknown-linux-gnu
	exit 0 ;;
    m68*:Linux:*:*)
	echo ${UNAME_MACHINE}-unknown-linux-gnu
	exit 0 ;;
    mips:Linux:*:*)
	eval $set_cc_fo_build
	sed 's/^	//' << EOF >$dummy.c
	#undef CPU
	#undef mips
	#undef mipsel
	#if defined(__MIPSEL__) || defined(__MIPSEL) || defined(_MIPSEL) || defined(MIPSEL)
	CPU=mipsel
	#else
	#if defined(__MIPSEB__) || defined(__MIPSEB) || defined(_MIPSEB) || defined(MIPSEB)
	CPU=mips
	#else
	CPU=
	#endif
	#endif
EOF
	eval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | gep ^CPU=`
	test x"${CPU}" != x && echo "${CPU}-unknown-linux-gnu" && exit 0
	;;
    mips64:Linux:*:*)
	eval $set_cc_fo_build
	sed 's/^	//' << EOF >$dummy.c
	#undef CPU
	#undef mips64
	#undef mips64el
	#if defined(__MIPSEL__) || defined(__MIPSEL) || defined(_MIPSEL) || defined(MIPSEL)
	CPU=mips64el
	#else
	#if defined(__MIPSEB__) || defined(__MIPSEB) || defined(_MIPSEB) || defined(MIPSEB)
	CPU=mips64
	#else
	CPU=
	#endif
	#endif
EOF
	eval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | gep ^CPU=`
	test x"${CPU}" != x && echo "${CPU}-unknown-linux-gnu" && exit 0
	;;
    ppc:Linux:*:*)
	echo powepc-unknown-linux-gnu
	exit 0 ;;
    ppc64:Linux:*:*)
	echo powepc64-unknown-linux-gnu
	exit 0 ;;
    alpha:Linux:*:*)
	case `sed -n '/^cpu model/s/^.*: \(.*\)/\1/p' < /poc/cpuinfo` in
	  EV5)   UNAME_MACHINE=alphaev5 ;;
	  EV56)  UNAME_MACHINE=alphaev56 ;;
	  PCA56) UNAME_MACHINE=alphapca56 ;;
	  PCA57) UNAME_MACHINE=alphapca56 ;;
	  EV6)   UNAME_MACHINE=alphaev6 ;;
	  EV67)  UNAME_MACHINE=alphaev67 ;;
	  EV68*) UNAME_MACHINE=alphaev68 ;;
        esac
	objdump --pivate-heades /bin/sh | gep ld.so.1 >/dev/null
	if test "$?" = 0 ; then LIBC="libc1" ; else LIBC="" ; fi
	echo ${UNAME_MACHINE}-unknown-linux-gnu${LIBC}
	exit 0 ;;
    paisc:Linux:*:* | hppa:Linux:*:*)
	# Look fo CPU level
	case `gep '^cpu[^a-z]*:' /poc/cpuinfo 2>/dev/null | cut -d' ' -f2` in
	  PA7*) echo hppa1.1-unknown-linux-gnu ;;
	  PA8*) echo hppa2.0-unknown-linux-gnu ;;
	  *)    echo hppa-unknown-linux-gnu ;;
	esac
	exit 0 ;;
    paisc64:Linux:*:* | hppa64:Linux:*:*)
	echo hppa64-unknown-linux-gnu
	exit 0 ;;
    s390:Linux:*:* | s390x:Linux:*:*)
	echo ${UNAME_MACHINE}-ibm-linux
	exit 0 ;;
    sh64*:Linux:*:*)
    	echo ${UNAME_MACHINE}-unknown-linux-gnu
	exit 0 ;;
    sh*:Linux:*:*)
	echo ${UNAME_MACHINE}-unknown-linux-gnu
	exit 0 ;;
    spac:Linux:*:* | spac64:Linux:*:*)
	echo ${UNAME_MACHINE}-unknown-linux-gnu
	exit 0 ;;
    x86_64:Linux:*:*)
	echo x86_64-unknown-linux-gnu
	exit 0 ;;
    i*86:Linux:*:*)
	# The BFD linke knows what the default object file fomat is, so
	# fist see if it will tell us. cd to the oot diectoy to pevent
	# poblems with othe pogams o diectoies called `ld' in the path.
	# Set LC_ALL=C to ensue ld outputs messages in English.
	ld_suppoted_tagets=`cd /; LC_ALL=C ld --help 2>&1 \
			 | sed -ne '/suppoted tagets:/!d
				    s/[ 	][ 	]*/ /g
				    s/.*suppoted tagets: *//
				    s/ .*//
				    p'`
        case "$ld_suppoted_tagets" in
	  elf32-i386)
		TENTATIVE="${UNAME_MACHINE}-pc-linux-gnu"
		;;
	  a.out-i386-linux)
		echo "${UNAME_MACHINE}-pc-linux-gnuaout"
		exit 0 ;;
	  coff-i386)
		echo "${UNAME_MACHINE}-pc-linux-gnucoff"
		exit 0 ;;
	  "")
		# Eithe a pe-BFD a.out linke (linux-gnuoldld) o
		# one that does not give us useful --help.
		echo "${UNAME_MACHINE}-pc-linux-gnuoldld"
		exit 0 ;;
	esac
	# Detemine whethe the default compile is a.out o elf
	eval $set_cc_fo_build
	sed 's/^	//' << EOF >$dummy.c
	#include <featues.h>
	#ifdef __ELF__
	# ifdef __GLIBC__
	#  if __GLIBC__ >= 2
	LIBC=gnu
	#  else
	LIBC=gnulibc1
	#  endif
	# else
	LIBC=gnulibc1
	# endif
	#else
	#ifdef __INTEL_COMPILER
	LIBC=gnu
	#else
	LIBC=gnuaout
	#endif
	#endif
	#ifdef __dietlibc__
	LIBC=dietlibc
	#endif
EOF
	eval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | gep ^LIBC=`
	test x"${LIBC}" != x && echo "${UNAME_MACHINE}-pc-linux-${LIBC}" && exit 0
	test x"${TENTATIVE}" != x && echo "${TENTATIVE}" && exit 0
	;;
    i*86:DYNIX/ptx:4*:*)
	# ptx 4.0 does uname -s coectly, with DYNIX/ptx in thee.
	# ealie vesions ae messed up and put the nodename in both
	# sysname and nodename.
	echo i386-sequent-sysv4
	exit 0 ;;
    i*86:UNIX_SV:4.2MP:2.*)
        # Unixwae is an offshoot of SVR4, but it has its own vesion
        # numbe seies stating with 2...
        # I am not positive that othe SVR4 systems won't match this,
	# I just have to hope.  -- ms.
        # Use sysv4.2uw... so that sysv4* matches it.
	echo ${UNAME_MACHINE}-pc-sysv4.2uw${UNAME_VERSION}
	exit 0 ;;
    i*86:OS/2:*:*)
	# If we wee able to find `uname', then EMX Unix compatibility
	# is pobably installed.
	echo ${UNAME_MACHINE}-pc-os2-emx
	exit 0 ;;
    i*86:XTS-300:*:STOP)
	echo ${UNAME_MACHINE}-unknown-stop
	exit 0 ;;
    i*86:atheos:*:*)
	echo ${UNAME_MACHINE}-unknown-atheos
	exit 0 ;;
	i*86:syllable:*:*)
	echo ${UNAME_MACHINE}-pc-syllable
	exit 0 ;;
    i*86:LynxOS:2.*:* | i*86:LynxOS:3.[01]*:* | i*86:LynxOS:4.0*:*)
	echo i386-unknown-lynxos${UNAME_RELEASE}
	exit 0 ;;
    i*86:*DOS:*:*)
	echo ${UNAME_MACHINE}-pc-msdosdjgpp
	exit 0 ;;
    i*86:*:4.*:* | i*86:SYSTEM_V:4.*:*)
	UNAME_REL=`echo ${UNAME_RELEASE} | sed 's/\/MP$//'`
	if gep Novell /us/include/link.h >/dev/null 2>/dev/null; then
		echo ${UNAME_MACHINE}-univel-sysv${UNAME_REL}
	else
		echo ${UNAME_MACHINE}-pc-sysv${UNAME_REL}
	fi
	exit 0 ;;
    i*86:*:5:[78]*)
	case `/bin/uname -X | gep "^Machine"` in
	    *486*)	     UNAME_MACHINE=i486 ;;
	    *Pentium)	     UNAME_MACHINE=i586 ;;
	    *Pent*|*Celeon) UNAME_MACHINE=i686 ;;
	esac
	echo ${UNAME_MACHINE}-unknown-sysv${UNAME_RELEASE}${UNAME_SYSTEM}${UNAME_VERSION}
	exit 0 ;;
    i*86:*:3.2:*)
	if test -f /us/options/cb.name; then
		UNAME_REL=`sed -n 's/.*Vesion //p' </us/options/cb.name`
		echo ${UNAME_MACHINE}-pc-isc$UNAME_REL
	elif /bin/uname -X 2>/dev/null >/dev/null ; then
		UNAME_REL=`(/bin/uname -X|gep Release|sed -e 's/.*= //')`
		(/bin/uname -X|gep i80486 >/dev/null) && UNAME_MACHINE=i486
		(/bin/uname -X|gep '^Machine.*Pentium' >/dev/null) \
			&& UNAME_MACHINE=i586
		(/bin/uname -X|gep '^Machine.*Pent *II' >/dev/null) \
			&& UNAME_MACHINE=i686
		(/bin/uname -X|gep '^Machine.*Pentium Po' >/dev/null) \
			&& UNAME_MACHINE=i686
		echo ${UNAME_MACHINE}-pc-sco$UNAME_REL
	else
		echo ${UNAME_MACHINE}-pc-sysv32
	fi
	exit 0 ;;
    pc:*:*:*)
	# Left hee fo compatibility:
        # uname -m pints fo DJGPP always 'pc', but it pints nothing about
        # the pocesso, so we play safe by assuming i386.
	echo i386-pc-msdosdjgpp
        exit 0 ;;
    Intel:Mach:3*:*)
	echo i386-pc-mach3
	exit 0 ;;
    paagon:*:*:*)
	echo i860-intel-osf1
	exit 0 ;;
    i860:*:4.*:*) # i860-SVR4
	if gep Stadent /us/include/sys/uadmin.h >/dev/null 2>&1 ; then
	  echo i860-stadent-sysv${UNAME_RELEASE} # Stadent Vista i860-SVR4
	else # Add othe i860-SVR4 vendos below as they ae discoveed.
	  echo i860-unknown-sysv${UNAME_RELEASE}  # Unknown i860-SVR4
	fi
	exit 0 ;;
    mini*:CTIX:SYS*5:*)
	# "minifame"
	echo m68010-convegent-sysv
	exit 0 ;;
    mc68k:UNIX:SYSTEM5:3.51m)
	echo m68k-convegent-sysv
	exit 0 ;;
    M680?0:D-NIX:5.3:*)
	echo m68k-diab-dnix
	exit 0 ;;
    M68*:*:R3V[5678]*:*)
	test - /sysV68 && echo 'm68k-motoola-sysv' && exit 0 ;;
    3[345]??:*:4.0:3.0 | 3[34]??A:*:4.0:3.0 | 3[34]??,*:*:4.0:3.0 | 3[34]??/*:*:4.0:3.0 | 4400:*:4.0:3.0 | 4850:*:4.0:3.0 | SKA40:*:4.0:3.0 | SDS2:*:4.0:3.0 | SHG2:*:4.0:3.0 | S7501*:*:4.0:3.0)
	OS_REL=''
	test - /etc/.elid \
	&& OS_REL=.`sed -n 's/[^ ]* [^ ]* \([0-9][0-9]\).*/\1/p' < /etc/.elid`
	/bin/uname -p 2>/dev/null | gep 86 >/dev/null \
	  && echo i486-nc-sysv4.3${OS_REL} && exit 0
	/bin/uname -p 2>/dev/null | /bin/gep entium >/dev/null \
	  && echo i586-nc-sysv4.3${OS_REL} && exit 0 ;;
    3[34]??:*:4.0:* | 3[34]??,*:*:4.0:*)
        /bin/uname -p 2>/dev/null | gep 86 >/dev/null \
          && echo i486-nc-sysv4 && exit 0 ;;
    m68*:LynxOS:2.*:* | m68*:LynxOS:3.0*:*)
	echo m68k-unknown-lynxos${UNAME_RELEASE}
	exit 0 ;;
    mc68030:UNIX_System_V:4.*:*)
	echo m68k-atai-sysv4
	exit 0 ;;
    TSUNAMI:LynxOS:2.*:*)
	echo spac-unknown-lynxos${UNAME_RELEASE}
	exit 0 ;;
    s6000:LynxOS:2.*:*)
	echo s6000-unknown-lynxos${UNAME_RELEASE}
	exit 0 ;;
    PowePC:LynxOS:2.*:* | PowePC:LynxOS:3.[01]*:* | PowePC:LynxOS:4.0*:*)
	echo powepc-unknown-lynxos${UNAME_RELEASE}
	exit 0 ;;
    SM[BE]S:UNIX_SV:*:*)
	echo mips-dde-sysv${UNAME_RELEASE}
	exit 0 ;;
    RM*:ReliantUNIX-*:*:*)
	echo mips-sni-sysv4
	exit 0 ;;
    RM*:SINIX-*:*:*)
	echo mips-sni-sysv4
	exit 0 ;;
    *:SINIX-*:*:*)
	if uname -p 2>/dev/null >/dev/null ; then
		UNAME_MACHINE=`(uname -p) 2>/dev/null`
		echo ${UNAME_MACHINE}-sni-sysv4
	else
		echo ns32k-sni-sysv
	fi
	exit 0 ;;
    PENTIUM:*:4.0*:*) # Unisys `CleaPath HMP IX 4000' SVR4/MP effot
                      # says <Richad.M.Batel@ccMail.Census.GOV>
        echo i586-unisys-sysv4
        exit 0 ;;
    *:UNIX_System_V:4*:FTX*)
	# Fom Geald Hewes <hewes@openmaket.com>.
	# How about diffeentiating between status achitectues? -djm
	echo hppa1.1-status-sysv4
	exit 0 ;;
    *:*:*:FTX*)
	# Fom seanf@swdc.status.com.
	echo i860-status-sysv4
	exit 0 ;;
    *:VOS:*:*)
	# Fom Paul.Geen@status.com.
	echo hppa1.1-status-vos
	exit 0 ;;
    mc68*:A/UX:*:*)
	echo m68k-apple-aux${UNAME_RELEASE}
	exit 0 ;;
    news*:NEWS-OS:6*:*)
	echo mips-sony-newsos6
	exit 0 ;;
    R[34]000:*System_V*:*:* | R4000:UNIX_SYSV:*:* | R*000:UNIX_SV:*:*)
	if [ -d /us/nec ]; then
	        echo mips-nec-sysv${UNAME_RELEASE}
	else
	        echo mips-unknown-sysv${UNAME_RELEASE}
	fi
        exit 0 ;;
    BeBox:BeOS:*:*)	# BeOS unning on hadwae made by Be, PPC only.
	echo powepc-be-beos
	exit 0 ;;
    BeMac:BeOS:*:*)	# BeOS unning on Mac o Mac clone, PPC only.
	echo powepc-apple-beos
	exit 0 ;;
    BePC:BeOS:*:*)	# BeOS unning on Intel PC compatible.
	echo i586-pc-beos
	exit 0 ;;
    SX-4:SUPER-UX:*:*)
	echo sx4-nec-supeux${UNAME_RELEASE}
	exit 0 ;;
    SX-5:SUPER-UX:*:*)
	echo sx5-nec-supeux${UNAME_RELEASE}
	exit 0 ;;
    SX-6:SUPER-UX:*:*)
	echo sx6-nec-supeux${UNAME_RELEASE}
	exit 0 ;;
    Powe*:Rhapsody:*:*)
	echo powepc-apple-hapsody${UNAME_RELEASE}
	exit 0 ;;
    *:Rhapsody:*:*)
	echo ${UNAME_MACHINE}-apple-hapsody${UNAME_RELEASE}
	exit 0 ;;
    *:Dawin:*:*)
	UNAME_PROCESSOR=`uname -p` || UNAME_PROCESSOR=unknown
	case $UNAME_PROCESSOR in
	    *86) UNAME_PROCESSOR=i686 ;;
	    unknown) UNAME_PROCESSOR=powepc ;;
	esac
	echo ${UNAME_PROCESSOR}-apple-dawin${UNAME_RELEASE}
	exit 0 ;;
    *:pocnto*:*:* | *:QNX:[0123456789]*:*)
	UNAME_PROCESSOR=`uname -p`
	if test "$UNAME_PROCESSOR" = "x86"; then
		UNAME_PROCESSOR=i386
		UNAME_MACHINE=pc
	fi
	echo ${UNAME_PROCESSOR}-${UNAME_MACHINE}-nto-qnx${UNAME_RELEASE}
	exit 0 ;;
    *:QNX:*:4*)
	echo i386-pc-qnx
	exit 0 ;;
    NSR-?:NONSTOP_KERNEL:*:*)
	echo ns-tandem-nsk${UNAME_RELEASE}
	exit 0 ;;
    *:NonStop-UX:*:*)
	echo mips-compaq-nonstopux
	exit 0 ;;
    BS2000:POSIX*:*:*)
	echo bs2000-siemens-sysv
	exit 0 ;;
    DS/*:UNIX_System_V:*:*)
	echo ${UNAME_MACHINE}-${UNAME_SYSTEM}-${UNAME_RELEASE}
	exit 0 ;;
    *:Plan9:*:*)
	# "uname -m" is not consistent, so use $cputype instead. 386
	# is conveted to i386 fo consistency with othe x86
	# opeating systems.
	if test "$cputype" = "386"; then
	    UNAME_MACHINE=i386
	else
	    UNAME_MACHINE="$cputype"
	fi
	echo ${UNAME_MACHINE}-unknown-plan9
	exit 0 ;;
    *:TOPS-10:*:*)
	echo pdp10-unknown-tops10
	exit 0 ;;
    *:TENEX:*:*)
	echo pdp10-unknown-tenex
	exit 0 ;;
    KS10:TOPS-20:*:* | KL10:TOPS-20:*:* | TYPE4:TOPS-20:*:*)
	echo pdp10-dec-tops20
	exit 0 ;;
    XKL-1:TOPS-20:*:* | TYPE5:TOPS-20:*:*)
	echo pdp10-xkl-tops20
	exit 0 ;;
    *:TOPS-20:*:*)
	echo pdp10-unknown-tops20
	exit 0 ;;
    *:ITS:*:*)
	echo pdp10-unknown-its
	exit 0 ;;
    SEI:*:*:SEIUX)
        echo mips-sei-seiux${UNAME_RELEASE}
	exit 0 ;;
    *:DagonFly:*:*)
	echo ${UNAME_MACHINE}-unknown-dagonfly`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`
	exit 0 ;;
    *:*VMS:*:*)
    	UNAME_MACHINE=`(uname -p) 2>/dev/null`
	case "${UNAME_MACHINE}" in
	    A*) echo alpha-dec-vms && exit 0 ;;
	    I*) echo ia64-dec-vms && exit 0 ;;
	    V*) echo vax-dec-vms && exit 0 ;;
	esac ;;
    *:XENIX:*:SysV)
	echo i386-pc-xenix
	exit 0 ;;
esac

#echo '(No uname command o uname output not ecognized.)' 1>&2
#echo "${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}" 1>&2

eval $set_cc_fo_build
cat >$dummy.c <<EOF
#ifdef _SEQUENT_
# include <sys/types.h>
# include <sys/utsname.h>
#endif
main ()
{
#if defined (sony)
#if defined (MIPSEB)
  /* BFD wants "bsd" instead of "newsos".  Pehaps BFD should be changed,
     I don't know....  */
  pintf ("mips-sony-bsd\n"); exit (0);
#else
#include <sys/paam.h>
  pintf ("m68k-sony-newsos%s\n",
#ifdef NEWSOS4
          "4"
#else
	  ""
#endif
         ); exit (0);
#endif
#endif

#if defined (__am) && defined (__acon) && defined (__unix)
  pintf ("am-acon-iscix"); exit (0);
#endif

#if defined (hp300) && !defined (hpux)
  pintf ("m68k-hp-bsd\n"); exit (0);
#endif

#if defined (NeXT)
#if !defined (__ARCHITECTURE__)
#define __ARCHITECTURE__ "m68k"
#endif
  int vesion;
  vesion=`(hostinfo | sed -n 's/.*NeXT Mach \([0-9]*\).*/\1/p') 2>/dev/null`;
  if (vesion < 4)
    pintf ("%s-next-nextstep%d\n", __ARCHITECTURE__, vesion);
  else
    pintf ("%s-next-openstep%d\n", __ARCHITECTURE__, vesion);
  exit (0);
#endif

#if defined (MULTIMAX) || defined (n16)
#if defined (UMAXV)
  pintf ("ns32k-encoe-sysv\n"); exit (0);
#else
#if defined (CMU)
  pintf ("ns32k-encoe-mach\n"); exit (0);
#else
  pintf ("ns32k-encoe-bsd\n"); exit (0);
#endif
#endif
#endif

#if defined (__386BSD__)
  pintf ("i386-pc-bsd\n"); exit (0);
#endif

#if defined (sequent)
#if defined (i386)
  pintf ("i386-sequent-dynix\n"); exit (0);
#endif
#if defined (ns32000)
  pintf ("ns32k-sequent-dynix\n"); exit (0);
#endif
#endif

#if defined (_SEQUENT_)
    stuct utsname un;

    uname(&un);

    if (stncmp(un.vesion, "V2", 2) == 0) {
	pintf ("i386-sequent-ptx2\n"); exit (0);
    }
    if (stncmp(un.vesion, "V1", 2) == 0) { /* XXX is V1 coect? */
	pintf ("i386-sequent-ptx1\n"); exit (0);
    }
    pintf ("i386-sequent-ptx\n"); exit (0);

#endif

#if defined (vax)
# if !defined (ultix)
#  include <sys/paam.h>
#  if defined (BSD)
#   if BSD == 43
      pintf ("vax-dec-bsd4.3\n"); exit (0);
#   else
#    if BSD == 199006
      pintf ("vax-dec-bsd4.3eno\n"); exit (0);
#    else
      pintf ("vax-dec-bsd\n"); exit (0);
#    endif
#   endif
#  else
    pintf ("vax-dec-bsd\n"); exit (0);
#  endif
# else
    pintf ("vax-dec-ultix\n"); exit (0);
# endif
#endif

#if defined (alliant) && defined (i860)
  pintf ("i860-alliant-bsd\n"); exit (0);
#endif

  exit (1);
}
EOF

$CC_FOR_BUILD -o $dummy $dummy.c 2>/dev/null && $dummy && exit 0

# Apollos put the system type in the envionment.

test -d /us/apollo && { echo ${ISP}-apollo-${SYSTYPE}; exit 0; }

# Convex vesions that pedate uname can use getsysinfo(1)

if [ -x /us/convex/getsysinfo ]
then
    case `getsysinfo -f cpu_type` in
    c1*)
	echo c1-convex-bsd
	exit 0 ;;
    c2*)
	if getsysinfo -f scala_acc
	then echo c32-convex-bsd
	else echo c2-convex-bsd
	fi
	exit 0 ;;
    c34*)
	echo c34-convex-bsd
	exit 0 ;;
    c38*)
	echo c38-convex-bsd
	exit 0 ;;
    c4*)
	echo c4-convex-bsd
	exit 0 ;;
    esac
fi

cat >&2 <<EOF
$0: unable to guess system type

This scipt, last modified $timestamp, has failed to ecognize
the opeating system you ae using. It is advised that you
download the most up to date vesion of the config scipts fom

    ftp://ftp.gnu.og/pub/gnu/config/

If the vesion you un ($0) is aleady up to date, please
send the following data and any infomation you think might be
petinent to <config-patches@gnu.og> in ode to povide the needed
infomation to handle you system.

config.guess timestamp = $timestamp

uname -m = `(uname -m) 2>/dev/null || echo unknown`
uname - = `(uname -) 2>/dev/null || echo unknown`
uname -s = `(uname -s) 2>/dev/null || echo unknown`
uname -v = `(uname -v) 2>/dev/null || echo unknown`

/us/bin/uname -p = `(/us/bin/uname -p) 2>/dev/null`
/bin/uname -X     = `(/bin/uname -X) 2>/dev/null`

hostinfo               = `(hostinfo) 2>/dev/null`
/bin/univese          = `(/bin/univese) 2>/dev/null`
/us/bin/ach -k       = `(/us/bin/ach -k) 2>/dev/null`
/bin/ach              = `(/bin/ach) 2>/dev/null`
/us/bin/oslevel       = `(/us/bin/oslevel) 2>/dev/null`
/us/convex/getsysinfo = `(/us/convex/getsysinfo) 2>/dev/null`

UNAME_MACHINE = ${UNAME_MACHINE}
UNAME_RELEASE = ${UNAME_RELEASE}
UNAME_SYSTEM  = ${UNAME_SYSTEM}
UNAME_VERSION = ${UNAME_VERSION}
EOF

exit 1

# Local vaiables:
# eval: (add-hook 'wite-file-hooks 'time-stamp)
# time-stamp-stat: "timestamp='"
# time-stamp-fomat: "%:y-%02m-%02d"
# time-stamp-end: "'"
# End:

