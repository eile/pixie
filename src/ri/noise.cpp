//////////////////////////////////////////////////////////////////////
//
//                             Pixie
//
// Copyright © 1999 - 2003, Okan Arikan
//
// Contact: okan@cs.utexas.edu
//
//	This library is free software; you can redistribute it and/or
//	modify it under the terms of the GNU Lesser General Public
//	License as published by the Free Software Foundation; either
//	version 2.1 of the License, or (at your option) any later version.
//
//	This library is distributed in the hope that it will be useful,
//	but WITHOUT ANY WARRANTY; without even the implied warranty of
//	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
//	Lesser General Public License for more details.
//
//	You should have received a copy of the GNU Lesser General Public
//	License along with this library; if not, write to the Free Software
//	Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
//
///////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////
//
//  File				:	noise.cpp
//  Classes				:	-
//  Description			:	The misc noise functions
//
////////////////////////////////////////////////////////////////////////
#include <math.h>

#include "common/algebra.h"
#include "common/os.h"
#include "noise.h"


#define FADE(t) ( t * t * t * ( t * ( t * 6 - 15 ) + 10 ) )
#define FASTFLOOR(x) ( ((x)>0) ? ((int)x) : ((int)x-1 ) )
#define LERP(t, a, b) ((a) + (t)*((b)-(a)))

/*
// Different permutation tables for x,y and z
static	const unsigned char		permX[512]	= {79,93,101,69,34,92,73,3,170,228,215,128,141,15,70,50,146,103,175,218,75,53,187,237,105,217,112,179,99,31,119,116,144,36,98,102,107,115,138,136,5,235,243,196,224,11,253,83,44,1,90,207,142,35,165,208,254,125,255,134,113,188,122,164,197,45,8,27,118,201,72,223,127,91,183,76,10,240,49,17,77,229,139,111,158,216,61,249,43,250,82,176,121,185,174,25,227,87,155,143,47,199,137,236,21,168,156,166,153,4,145,124,212,56,226,109,130,46,65,58,80,54,120,71,20,117,110,24,205,63,132,114,9,221,181,89,140,100,52,225,203,231,18,248,33,167,131,0,16,81,193,149,108,150,6,62,189,42,233,220,195,177,200,163,88,135,214,190,41,171,148,59,178,48,210,67,244,106,14,184,29,66,234,191,194,213,242,172,7,219,104,39,169,28,96,232,51,12,57,161,246,74,22,159,13,40,95,198,38,64,78,151,126,239,68,55,245,154,162,206,37,238,252,32,23,157,84,241,209,186,97,182,19,30,86,26,192,180,173,123,202,204,211,230,133,152,60,85,251,129,94,222,160,147,2,247,79,93,101,69,34,92,73,3,170,228,215,128,141,15,70,50,146,103,175,218,75,53,187,237,105,217,112,179,99,31,119,116,144,36,98,102,107,115,138,136,5,235,243,196,224,11,253,83,44,1,90,207,142,35,165,208,254,125,255,134,113,188,122,164,197,45,8,27,118,201,72,223,127,91,183,76,10,240,49,17,77,229,139,111,158,216,61,249,43,250,82,176,121,185,174,25,227,87,155,143,47,199,137,236,21,168,156,166,153,4,145,124,212,56,226,109,130,46,65,58,80,54,120,71,20,117,110,24,205,63,132,114,9,221,181,89,140,100,52,225,203,231,18,248,33,167,131,0,16,81,193,149,108,150,6,62,189,42,233,220,195,177,200,163,88,135,214,190,41,171,148,59,178,48,210,67,244,106,14,184,29,66,234,191,194,213,242,172,7,219,104,39,169,28,96,232,51,12,57,161,246,74,22,159,13,40,95,198,38,64,78,151,126,239,68,55,245,154,162,206,37,238,252,32,23,157,84,241,209,186,97,182,19,30,86,26,192,180,173,123,202,204,211,230,133,152,60,85,251,129,94,222,160,147,2,247};
static	const unsigned char		permY[512]	= {48,65,205,77,126,222,16,125,64,198,51,223,75,26,63,112,208,118,123,215,179,136,152,158,181,147,188,97,221,27,231,219,6,105,247,107,76,203,20,157,170,165,45,140,53,23,0,38,224,73,167,217,69,60,32,211,82,156,196,83,70,34,14,92,24,59,86,155,187,111,120,163,237,248,100,169,178,103,234,195,85,1,229,94,80,193,117,216,132,42,62,176,96,10,39,164,154,246,2,88,37,139,108,84,22,148,52,210,161,249,29,98,104,255,15,110,54,7,41,200,44,168,9,194,250,74,235,220,227,225,19,173,142,232,93,102,162,192,121,137,135,99,43,213,186,245,228,197,79,183,185,3,114,101,124,177,151,218,226,253,46,95,240,113,50,244,40,5,138,160,35,81,134,141,159,175,238,189,127,230,146,47,206,25,115,207,212,199,172,17,68,87,131,184,106,251,12,153,21,144,122,72,214,166,209,143,58,28,66,236,191,55,133,90,190,18,56,109,241,119,239,78,33,180,128,91,31,4,174,71,30,49,67,130,242,145,204,61,129,243,252,254,89,182,116,36,171,57,8,150,149,202,13,201,11,233,48,65,205,77,126,222,16,125,64,198,51,223,75,26,63,112,208,118,123,215,179,136,152,158,181,147,188,97,221,27,231,219,6,105,247,107,76,203,20,157,170,165,45,140,53,23,0,38,224,73,167,217,69,60,32,211,82,156,196,83,70,34,14,92,24,59,86,155,187,111,120,163,237,248,100,169,178,103,234,195,85,1,229,94,80,193,117,216,132,42,62,176,96,10,39,164,154,246,2,88,37,139,108,84,22,148,52,210,161,249,29,98,104,255,15,110,54,7,41,200,44,168,9,194,250,74,235,220,227,225,19,173,142,232,93,102,162,192,121,137,135,99,43,213,186,245,228,197,79,183,185,3,114,101,124,177,151,218,226,253,46,95,240,113,50,244,40,5,138,160,35,81,134,141,159,175,238,189,127,230,146,47,206,25,115,207,212,199,172,17,68,87,131,184,106,251,12,153,21,144,122,72,214,166,209,143,58,28,66,236,191,55,133,90,190,18,56,109,241,119,239,78,33,180,128,91,31,4,174,71,30,49,67,130,242,145,204,61,129,243,252,254,89,182,116,36,171,57,8,150,149,202,13,201,11,233};
static	const unsigned char		permZ[512]	= {190,5,42,32,253,64,220,215,20,222,39,133,97,146,22,198,161,1,151,184,228,204,138,154,218,46,236,141,126,185,60,82,143,131,93,127,58,65,88,251,28,211,35,147,175,7,230,2,181,148,160,76,209,59,105,183,101,16,47,26,182,227,63,242,80,99,177,238,199,86,129,0,244,84,174,14,74,100,44,106,229,145,29,36,94,180,168,221,237,233,216,225,252,167,197,3,169,72,223,178,156,121,224,201,150,239,155,9,166,8,249,33,51,117,163,245,132,77,18,217,96,54,243,142,255,114,207,55,66,205,125,48,213,17,11,23,83,157,19,210,119,92,90,109,196,61,186,120,123,192,130,79,135,12,103,50,191,91,107,85,38,102,171,208,170,113,25,78,27,37,159,179,57,115,30,214,250,81,110,149,111,219,152,172,187,193,53,246,13,144,24,73,231,188,139,41,43,212,45,70,194,241,254,136,89,235,234,87,128,10,202,75,232,134,34,162,52,124,247,195,248,31,62,206,122,153,95,68,104,40,203,49,67,56,71,98,226,164,158,240,108,4,176,189,112,21,173,118,116,15,6,165,200,137,69,140,190,5,42,32,253,64,220,215,20,222,39,133,97,146,22,198,161,1,151,184,228,204,138,154,218,46,236,141,126,185,60,82,143,131,93,127,58,65,88,251,28,211,35,147,175,7,230,2,181,148,160,76,209,59,105,183,101,16,47,26,182,227,63,242,80,99,177,238,199,86,129,0,244,84,174,14,74,100,44,106,229,145,29,36,94,180,168,221,237,233,216,225,252,167,197,3,169,72,223,178,156,121,224,201,150,239,155,9,166,8,249,33,51,117,163,245,132,77,18,217,96,54,243,142,255,114,207,55,66,205,125,48,213,17,11,23,83,157,19,210,119,92,90,109,196,61,186,120,123,192,130,79,135,12,103,50,191,91,107,85,38,102,171,208,170,113,25,78,27,37,159,179,57,115,30,214,250,81,110,149,111,219,152,172,187,193,53,246,13,144,24,73,231,188,139,41,43,212,45,70,194,241,254,136,89,235,234,87,128,10,202,75,232,134,34,162,52,124,247,195,248,31,62,206,122,153,95,68,104,40,203,49,67,56,71,98,226,164,158,240,108,4,176,189,112,21,173,118,116,15,6,165,200,137,69,140};

// Permutation tables for the cell noise
static	const unsigned short	permN[4096]	= {}; 
static	const float				randN[4096]	= {0.40536f,0.0132654f,0.630658f,0.547987f,0.132128f,0.482789f,0.570651f,0.594256f,0.864749f,0.106682f,0.757909f,0.168957f,0.102531f,0.0136439f,0.811577f,0.287452f,0.874755f,0.836685f,0.852981f,0.287892f,0.541242f,0.345706f,0.430295f,0.256198f,0.19247f,0.187897f,0.0221892f,0.0575776f,0.572065f,0.172099f,0.475916f,0.264934f,0.985497f,0.803206f,0.258655f,0.384339f,0.0080771f,0.977972f,0.718833f,0.556448f,0.635491f,0.510681f,0.532999f,0.936991f,0.741457f,0.748181f,0.687777f,0.25066f,0.954209f,0.267768f,0.266981f,0.755002f,0.780955f,0.511055f,0.531047f,0.535869f,0.271956f,0.310234f,0.837073f,0.763299f,0.887078f,0.533325f,0.118908f,0.834209f,0.886814f,0.670343f,0.743172f,0.659302f,0.660583f,0.433648f,0.0355097f,0.47297f,0.24749f,0.0447804f,0.832645f,0.232863f,0.655068f,0.167976f,0.168439f,0.3738f,0.284274f,0.277206f,0.402224f,0.704882f,0.63524f,0.453321f,0.514104f,0.157655f,0.893381f,0.188779f,0.303227f,0.763325f,0.725619f,0.46238f,0.355752f,0.71416f,0.460994f,0.381693f,0.288252f,0.00665791f,0.674152f,0.682545f,0.151391f,0.0592752f,0.337122f,0.317091f,0.886864f,0.822932f,0.0204182f,0.14544f,0.375957f,0.223801f,0.0203754f,0.855482f,0.516164f,0.266361f,0.182175f,0.680811f,0.409819f,0.0164857f,0.6599f,0.515265f,0.540041f,0.565f,0.904132f,0.54158f,0.971087f,0.625809f,0.84542f,0.945167f,0.42534f,0.909722f,0.341216f,0.9949f,0.931969f,0.591261f,0.433944f,0.195973f,0.67672f,0.892202f,0.920759f,0.760504f,0.552769f,0.26802f,0.342819f,0.841655f,0.650549f,0.0793233f,0.941334f,0.927347f,0.099204f,0.27839f,0.991992f,0.981284f,0.725762f,0.964194f,0.532156f,0.482888f,0.194636f,0.646051f,0.852609f,0.939993f,0.441638f,0.765785f,0.876852f,0.11013f,0.553463f,0.23006f,0.717221f,0.767563f,0.80434f,0.275868f,0.590911f,0.615888f,0.322697f,0.447796f,0.047398f,0.648742f,0.594635f,0.391875f,0.863313f,0.880589f,0.874062f,0.72841f,0.515305f,0.749939f,0.9252f,0.955686f,0.313529f,0.597399f,0.683743f,0.988606f,0.919369f,0.857772f,0.623851f,0.0163969f,0.575076f,0.768295f,0.133136f,0.603071f,0.619122f,0.203766f,0.426004f,0.742698f,0.571434f,0.237408f,0.376186f,0.126151f,0.477677f,0.734304f,0.407559f,0.242321f,0.762207f,0.774161f,0.734718f,0.23816f,0.344133f,0.948567f,0.856455f,0.342798f,0.356069f,0.0824285f,0.497276f,0.129038f,0.201359f,0.265658f,0.582722f,0.718576f,0.173665f,0.220713f,0.2838f,0.430365f,0.173947f,0.855336f,0.173855f,0.775033f,0.498496f,0.693436f,0.673725f,0.811851f,0.964608f,0.619268f,0.149387f,0.127449f,0.56708f,0.565592f,0.527034f,0.257129f,0.145223f,0.813759f,0.951517f,0.771053f,0.351055f,0.90558f,0.929792f,0.0229858f,0.267219f,0.30722f,0.442862f,0.48983f,0.814699f,0.454425f,0.776219f,0.256501f,0.411789f,0.890552f,0.897118f,0.393626f,0.848647f,0.230927f,0.238573f,0.628644f,0.804463f,0.251607f,0.163923f,0.210409f,0.537285f,0.130808f,0.231121f,0.0330077f,0.34439f,0.991408f,0.225307f,0.0673784f,0.402065f,0.763938f,0.690623f,0.690702f,0.723447f,0.656025f,0.869561f,0.570043f,0.504861f,0.982282f,0.60239f,0.0635944f,0.482983f,0.900882f,0.416946f,0.704295f,0.213665f,0.25684f,0.51718f,0.843221f,0.306126f,0.647307f,0.640868f,0.903073f,0.840872f,0.709046f,0.463213f,0.446511f,0.384214f,0.350284f,0.0354826f,0.17678f,0.67615f,0.823951f,0.226272f,0.166096f,0.997475f,0.781955f,0.206447f,0.15674f,0.548714f,0.0779438f,0.245482f,0.726131f,0.495399f,0.0719368f,0.385976f,0.596501f,0.132053f,0.753674f,0.289808f,0.517324f,0.0461426f,0.554468f,0.699902f,0.837237f,0.622903f,0.0393381f,0.212492f,0.0482442f,0.291958f,0.856921f,0.291781f,0.91485f,0.454984f,0.517214f,0.281708f,0.0791905f,0.720557f,0.853415f,0.366847f,0.552236f,0.367734f,0.452734f,0.431505f,0.487968f,0.449523f,0.449735f,0.560265f,0.0592358f,0.0514759f,0.194958f,0.84022f,0.626104f,0.351034f,0.245474f,0.377508f,0.872875f,0.774046f,0.0449278f,0.490183f,0.780194f,0.389448f,0.661713f,0.917635f,0.842273f,0.412829f,0.729047f,0.639103f,0.521109f,0.118912f,0.952013f,0.806831f,0.377765f,0.0633589f,0.509976f,0.583341f,0.683345f,0.314469f,0.140698f,0.0811469f,0.223966f,0.933176f,0.248077f,0.903063f,0.674807f,0.043902f,0.349074f,0.701933f,0.392928f,0.588514f,0.658489f,0.401767f,0.59493f,0.0368943f,0.466534f,0.487066f,0.649492f,0.463184f,0.811133f,0.351949f,0.48945f,0.984965f,0.713313f,0.863835f,0.306715f,0.763511f,0.317072f,0.118403f,0.642507f,0.195853f,0.948217f,0.967926f,0.42411f,0.38198f,0.13712f,0.16987f,0.561118f,0.346544f,0.0574685f,0.288789f,0.5155f,0.572817f,0.829119f,0.537862f,0.906812f,0.996821f,0.559053f,0.693658f,0.850926f,0.469655f,0.496012f,0.952116f,0.583203f,0.349448f,0.304768f,0.0218798f,0.644226f,0.741218f,0.112147f,0.903783f,0.525274f,0.175391f,0.268547f,0.0569967f,0.854457f,0.461645f,0.113077f,0.242426f,0.584996f,0.280237f,0.278108f,0.545184f,0.904226f,0.325969f,0.366406f,0.0573732f,0.125669f,0.516352f,0.175533f,0.314206f,0.35901f,0.0224386f,0.247858f,0.198805f,0.583498f,0.439527f,0.514051f,0.258923f,0.0499842f,0.521033f,0.142769f,0.525555f,0.194281f,0.668298f,0.830494f,0.362824f,0.371172f,0.109261f,0.751383f,0.753819f,0.776937f,0.19207f,0.105404f,0.79436f,0.421593f,0.98767f,0.90131f,0.657233f,0.375398f,0.693389f,0.761343f,0.804369f,0.357321f,0.95483f,0.855294f,0.99625f,0.577195f,0.961672f,0.851237f,0.730126f,0.418805f,0.950523f,0.435508f,0.140986f,0.132778f,0.829256f,0.0451043f,0.638068f,0.664205f,0.682751f,0.240094f,0.400336f,0.708921f,0.137418f,0.374331f,0.753329f,0.275816f,0.0371254f,0.362137f,0.719777f,0.563767f,0.809228f,0.650125f,0.850093f,0.113122f,0.409769f,0.739528f,0.397151f,0.679829f,0.661731f,0.185344f,0.298153f,0.163732f,0.939885f,0.593674f,0.0162999f,0.514793f,0.125771f,0.811917f,0.955813f,0.491645f,0.233519f,0.256331f,0.0999622f,0.127017f,0.43837f,0.0190179f,0.0908779f,0.761167f,0.267231f,0.821806f,0.27904f,0.751997f,0.484301f,0.106138f,0.62392f,0.418318f,0.495218f,0.89428f,0.807695f,0.592891f,0.713012f,0.675707f,0.557772f,0.94916f,0.758398f,0.690755f,0.443006f,0.178975f,0.569131f,0.412126f,0.837462f,0.403494f,0.863943f,0.839102f,0.095715f,0.484356f,0.885165f,0.138636f,0.276466f,0.681108f,0.922949f,0.993057f,0.132042f,0.137914f,0.196194f,0.0520257f,0.16343f,0.492221f,0.731527f,0.323499f,0.898389f,0.933091f,0.140144f,0.82138f,0.784014f,0.416096f,0.544801f,0.270478f,0.918549f,0.52504f,0.0200817f,0.213463f,0.2789f,0.0764558f,0.0327602f,0.146806f,0.111188f,0.546316f,0.509571f,0.19056f,0.490628f,0.564833f,0.684931f,0.0695957f,0.78575f,0.240615f,0.661942f,0.760765f,0.0714264f,0.305539f,0.432688f,0.436892f,0.121412f,0.567359f,0.792742f,0.300797f,0.0871256f,0.177247f,0.259885f,0.492545f,0.796837f,0.31268f,0.0761863f,0.160852f,0.48883f,0.888052f,0.425312f,0.564651f,0.845013f,0.15389f,0.445616f,0.49036f,0.775038f,0.969392f,0.53064f,0.0781318f,0.105936f,0.409144f,0.00930024f,0.939986f,0.596617f,0.544909f,0.753165f,0.448816f,0.517676f,0.0650227f,0.147543f,0.0857717f,0.569208f,0.375255f,0.734129f,0.417823f,0.117525f,0.384407f,0.0192803f,0.942106f,0.250237f,0.645307f,0.623057f,0.47272f,0.200681f,0.970577f,0.648483f,0.483634f,0.594397f,0.468045f,0.243901f,0.833992f,0.912886f,0.816704f,0.48173f,0.877163f,0.0181636f,0.753486f,0.830408f,0.937425f,0.442133f,0.99793f,0.667202f,0.946824f,0.318945f,0.782248f,0.84669f,0.448809f,0.428031f,0.56249f,0.464313f,0.387892f,0.770574f,0.566295f,0.406456f,0.0561218f,0.778976f,0.612411f,0.930241f,0.610351f,0.86679f,0.452633f,0.735977f,0.310091f,0.579122f,0.16288f,0.823262f,0.697828f,0.498691f,0.616142f,0.346866f,0.519947f,0.546496f,0.906773f,0.205143f,0.109405f,0.0976699f,0.697512f,0.370698f,0.19849f,0.576986f,0.411123f,0.163977f,0.712771f,0.344516f,0.643391f,0.471114f,0.310736f,0.960999f,0.223579f,0.0607039f,0.265695f,0.386123f,0.322049f,0.39329f,0.302176f,0.715875f,0.431189f,0.594112f,0.903368f,0.139008f,0.11185f,0.812694f,0.176211f,0.517495f,0.0591685f,0.453517f,0.715177f,0.163892f,0.166061f,0.244048f,0.229581f,0.972638f,0.549787f,0.7901f,0.349966f,0.28993f,0.861854f,0.993741f,0.300199f,0.508387f,0.555152f,0.739501f,0.791607f,0.483547f,0.635883f,0.793655f,0.13669f,0.200346f,0.0114699f,0.52601f,0.824337f,0.622055f,0.433253f,0.0876225f,0.487117f,0.195136f,0.825919f,0.517628f,0.656313f,0.830416f,0.646453f,0.410642f,0.668677f,0.725488f,0.292046f,0.514379f,0.803308f,0.494846f,0.946879f,0.473981f,0.29887f,0.820225f,0.916859f,0.236254f,0.497041f,0.542634f,0.76415f,0.628422f,0.577413f,0.118611f,0.964968f,0.030463f,0.159246f,0.116769f,0.563813f,0.705593f,0.521748f,0.165716f,0.1498f,0.868803f,0.0566612f,0.894678f,0.0350277f,0.974989f,0.65968f,0.299421f,0.472811f,0.441846f,0.12559f,0.610069f,0.0158951f,0.369607f,0.253083f,0.0955178f,0.492205f,0.698678f,0.625518f,0.813388f,0.265652f,0.218805f,0.192989f,0.848896f,0.277919f,0.968034f,0.0971729f,0.995936f,0.38455f,0.641175f,0.882846f,0.615067f,0.88029f,0.633547f,0.85746f,0.685311f,0.0194431f,0.289558f,0.400811f,0.621126f,0.737756f,0.322586f,0.623637f,0.360435f,0.233382f,0.00924081f,0.0611808f,0.271135f,0.810522f,0.233855f,0.456025f,0.401682f,0.405025f,0.354731f,0.617953f,0.777871f,0.375153f,0.221954f,0.316972f,0.457775f,0.245001f,0.434931f,0.901185f,0.440487f,0.0846721f,0.722852f,0.0245135f,0.841951f,0.226736f,0.336137f,0.0353874f,0.259805f,0.205242f,0.263339f,0.962463f,0.773963f,0.753073f,0.279643f,0.740722f,0.66815f,0.644282f,0.713096f,0.139383f,0.599351f,0.0423319f,0.706687f,0.224013f,0.400187f,0.785049f,0.560084f,0.102189f,0.980668f,0.648666f,0.785541f,0.130854f,0.962242f,0.637796f,0.705337f,0.976216f,0.151456f,0.184639f,0.137405f,0.262566f,0.753365f,0.536837f,0.974312f,0.617429f,0.630491f,0.0639864f,0.734025f,0.0656053f,0.0784328f,0.181907f,0.0167962f,0.0510526f,0.179664f,0.829381f,0.702494f,0.761714f,0.935646f,0.839413f,0.679342f,0.260602f,0.402702f,0.452095f,0.152979f,0.692819f,0.66725f,0.938139f,0.305211f,0.277182f,0.192245f,0.662004f,0.122958f,0.527157f,0.262191f,0.646083f,0.0557808f,0.709463f,0.886597f,0.891229f,0.300052f,0.235041f,0.451811f,0.916555f,0.139814f,0.797171f,0.628122f,0.694265f,0.924552f,0.353737f,0.472219f,0.452264f,0.400173f,0.191013f,0.747603f,0.499023f,0.62886f,0.607898f,0.186862f,0.848929f,0.916986f,0.714256f,0.628923f,0.387679f,0.937111f,0.755154f,0.0929858f,0.0756485f,0.693362f,0.332948f,0.403969f,0.502277f,0.6114f,0.0678165f,0.900306f,0.647544f,0.351265f,0.169696f,0.99544f,0.998797f,0.93401f,0.850375f,0.575657f,0.583901f,0.229469f,0.659794f,0.0976405f,0.959846f,0.879156f,0.485627f,0.1392f,0.952913f,0.71153f,0.270574f,0.617139f,0.874157f,0.564725f,0.687579f,0.287705f,0.0847213f,0.372627f,0.870338f,0.361793f,0.27083f,0.809024f,0.584027f,0.49222f,0.354672f,0.308156f,0.660646f,0.665199f,0.83558f,0.694215f,0.480228f,0.365955f,0.933398f,0.418866f,0.850163f,0.396474f,0.62977f,0.0113558f,0.97853f,0.696665f,0.505062f,0.841013f,0.808307f,0.356211f,0.40573f,0.534484f,0.466015f,0.781585f,0.841438f,0.191518f,0.384546f,0.424601f,0.360579f,0.435454f,0.230787f,0.408781f,0.534587f,0.322458f,0.933967f,0.766433f,0.50989f,0.914705f,0.207177f,0.974828f,0.434434f,0.522879f,0.409691f,0.949436f,0.53774f,0.434379f,0.952502f,0.839927f,0.760495f,0.332688f,0.264182f,0.663277f,0.199492f,0.192698f,0.158271f,0.09527f,0.540009f,0.171285f,0.28783f,0.619415f,0.423282f,0.364475f,0.288201f,0.390486f,0.826206f,0.0493623f,0.399111f,0.554772f,0.842038f,0.912324f,0.905755f,0.792366f,0.0182623f,0.904577f,0.604558f,0.545496f,0.222294f,0.583887f,0.436148f,0.469643f,0.582727f,0.823507f,0.660335f,0.160012f,0.601479f,0.301151f,0.129844f,0.476483f,0.71743f,0.869517f,0.0196231f,0.653235f,0.723402f,0.130591f,0.0447673f,0.293383f,0.101468f,0.731358f,0.427851f,0.25339f,0.00545277f,0.652593f,0.355386f,0.817361f,0.900074f,0.699039f,0.663982f,0.703227f,0.889624f,0.123061f,0.447442f,0.480949f,0.589633f,0.86145f,0.0571338f,0.925009f,0.391215f,0.90541f,0.843112f,0.993738f,0.255909f,0.0258312f,0.707142f,0.38254f,0.519665f,0.221361f,0.911996f,0.72382f,0.641584f,0.493433f,0.200757f,0.114777f,0.603113f,0.367337f,0.319498f,0.628998f,0.900649f,0.99806f,0.473288f,0.495882f,0.711285f,0.411202f,0.364395f,0.523489f,0.659188f,0.604138f,0.257059f,0.271971f,0.500489f,0.626603f,0.0255487f,0.903966f,0.736441f,0.828894f,0.459239f,0.203177f,0.256298f,0.41831f,0.441823f,0.838839f,0.334634f,0.76141f,0.160703f,0.61153f,0.799285f,0.128751f,0.027464f,0.128241f,0.0818325f,0.109615f,0.292381f,0.0959102f,0.729999f,0.206041f,0.51385f,0.248731f,0.644171f,0.220066f,0.397265f,0.354508f,0.41873f,0.83157f,0.37066f,0.640252f,0.275798f,0.997282f,0.786872f,0.94089f,0.430987f,0.673261f,0.541411f,0.396847f,0.242396f,0.789657f,0.118494f,0.957658f,0.159778f,0.25405f,0.524903f,0.0701807f,0.0823223f,0.180701f,0.347906f,0.486586f,0.0382979f,0.176207f,0.95011f,0.0821239f,0.806991f,0.178089f,0.0656163f,0.827589f,0.155249f,0.494412f,0.534439f,0.132868f,0.0353451f,0.714717f,0.419321f,0.710276f,0.859855f,0.0284672f,0.763896f,0.309868f,0.647243f,0.598353f,0.666482f,0.0188488f,0.734228f,0.192538f,0.648936f,0.932606f,0.729619f,0.321385f,0.253399f,0.5033f,0.615493f,0.280397f,0.702194f,0.669771f,0.634908f,0.542055f,0.885722f,0.522438f,0.85156f,0.0302683f,0.797699f,0.135603f,0.503915f,0.601397f,0.390969f,0.106784f,0.777417f,0.000304709f,0.86315f,0.523206f,0.896979f,0.152115f,0.731601f,0.649555f,0.452047f,0.287611f,0.396179f,0.573734f,0.984473f,0.215824f,0.798952f,0.406936f,0.135651f,0.834771f,0.0356444f,0.947928f,0.188652f,0.608813f,0.443397f,0.922008f,0.522402f,0.546498f,0.756689f,0.437727f,0.207823f,0.0297572f,0.229573f,0.841057f,0.644448f,0.0920675f,0.552346f,0.809539f,0.206128f,0.472669f,0.0712035f,0.537007f,0.04586f,0.345315f,0.793413f,0.682357f,0.485618f,0.0581793f,0.552749f,0.481452f,0.17481f,0.0618678f,0.0872186f,0.172102f,0.318402f,0.891384f,0.569681f,0.521402f,0.35009f,0.535194f,0.0525421f,0.449551f,0.16717f,0.450085f,0.314364f,0.0477339f,0.821337f,0.868351f,0.680022f,0.927306f,0.0682361f,0.0218184f,0.273403f,0.104827f,0.08509f,0.496655f,0.53064f,0.977991f,0.740756f,0.358104f,0.843515f,0.376802f,0.445946f,0.920173f,0.876853f,0.929331f,0.16826f,0.421544f,0.361809f,0.502219f,0.737495f,0.0231011f,0.722132f,0.432654f,0.511885f,0.649489f,0.143484f,0.645794f,0.134624f,0.028719f,0.291413f,0.626868f,0.232994f,0.115875f,0.986041f,0.252739f,0.380875f,0.247261f,0.977547f,0.150074f,0.992756f,0.272282f,0.731468f,0.309894f,0.9457f,0.836166f,0.0448259f,0.933672f,0.312416f,0.752407f,0.684147f,0.323719f,0.522734f,0.245303f,0.722677f,0.125353f,0.787878f,0.454183f,0.462282f,0.882745f,0.375991f,0.0338187f,0.148495f,0.6589f,0.557362f,0.346775f,0.952295f,0.276339f,0.677407f,0.878045f,0.0966374f,0.779167f,0.665155f,0.00208192f,0.474369f,0.400474f,0.511175f,0.91909f,0.36586f,0.938574f,0.460201f,0.506412f,0.732586f,0.863776f,0.47999f,0.50248f,0.625768f,0.860064f,0.736346f,0.904391f,0.999069f,0.77294f,0.0315951f,0.0959339f,0.308912f,0.426819f,0.657855f,0.3856f,0.934802f,0.49132f,0.836294f,0.362294f,0.249765f,0.503865f,0.434164f,0.522666f,0.919527f,0.0914235f,0.872464f,0.426763f,0.573794f,0.925958f,0.304865f,0.720477f,0.232231f,0.0323613f,0.990872f,0.24402f,0.0455601f,0.0345039f,0.880764f,0.931373f,0.380724f,0.221715f,0.984247f,0.986277f,0.91943f,0.218826f,0.446747f,0.820552f,0.0982048f,0.99091f,0.0742206f,0.0359809f,0.356767f,0.220367f,0.389993f,0.0510389f,0.124476f,0.883367f,0.683946f,0.654125f,0.0221024f,0.0416344f,0.91939f,0.722976f,0.491587f,0.38399f,0.352317f,0.726655f,0.641265f,0.657307f,0.794063f,0.636786f,0.866615f,0.839553f,0.878746f,0.693991f,0.558094f,0.400393f,0.262711f,0.479813f,0.993962f,0.442765f,0.528133f,0.563954f,0.0483302f,0.985407f,0.0626515f,0.550782f,0.438745f,0.265215f,0.344479f,0.0730709f,0.435417f,0.642814f,0.118738f,0.845702f,0.155561f,0.220744f,0.185441f,0.00923334f,0.5077f,0.838624f,0.913642f,0.585516f,0.726342f,0.831496f,0.520481f,0.20552f,0.992633f,0.313679f,0.37561f,0.707474f,0.71278f,0.412435f,0.828656f,0.0786779f,0.386781f,0.106975f,0.885339f,0.779329f,0.564629f,0.431395f,0.848527f,0.812603f,0.921873f,0.403486f,0.968231f,0.45115f,0.583162f,0.956809f,0.0676698f,0.0175723f,0.181122f,0.602927f,0.440902f,0.0940427f,0.0889994f,0.504327f,0.854576f,0.357992f,0.481996f,0.668154f,0.92863f,0.659347f,0.0762442f,0.065731f,0.422126f,0.388115f,0.687263f,0.322607f,0.987039f,0.955273f,0.0929966f,0.206722f,0.635399f,0.632667f,0.809434f,0.00711122f,0.499912f,0.24364f,0.794765f,0.830204f,0.811405f,0.545647f,0.214328f,0.497063f,0.153895f,0.424834f,0.883003f,0.0114936f,0.902812f,0.0313205f,0.533081f,0.301657f,0.353248f,0.0926448f,0.578233f,0.826313f,0.41647f,0.299607f,0.620015f,0.40618f,0.0110304f,0.257348f,0.573268f,0.0621077f,0.23141f,0.245214f,0.616664f,0.633129f,0.652097f,0.240897f,0.0538747f,0.118316f,0.96243f,0.632148f,0.978891f,0.143761f,0.247022f,0.425798f,0.394624f,0.47766f,0.4843f,0.206074f,0.49413f,0.564975f,0.148381f,0.243911f,0.987911f,0.231601f,0.957599f,0.388064f,0.285808f,0.201051f,0.490074f,0.467727f,0.572927f,0.16422f,0.119291f,0.249008f,0.340818f,0.577463f,0.565399f,0.879296f,0.222513f,0.768688f,0.019344f,0.71138f,0.221543f,0.935079f,0.750565f,0.931089f,0.646096f,0.257552f,0.681301f,0.634657f,0.829543f,0.317206f,0.83359f,0.785742f,0.0599354f,0.294875f,0.731582f,0.12975f,0.50774f,0.347406f,0.312918f,0.387898f,0.163543f,0.350749f,0.0706566f,0.402958f,0.0439942f,0.257205f,0.543179f,0.758951f,0.907364f,0.5379f,0.83732f,0.510974f,0.901519f,0.592997f,0.124853f,0.252374f,0.860886f,0.910325f,0.0747687f,0.520687f,0.84519f,0.0802124f,0.62993f,0.0677748f,0.294878f,0.249314f,0.586656f,0.335036f,0.345026f,0.96525f,0.612938f,0.63019f,0.148569f,0.348968f,0.674349f,0.213657f,0.616199f,0.674303f,0.96409f,0.981139f,0.656092f,0.963105f,0.170134f,0.173919f,0.410605f,0.439775f,0.994172f,0.952514f,0.948587f,0.0196173f,0.644344f,0.140724f,0.357299f,0.6314f,0.664236f,0.708748f,0.907964f,0.916963f,0.577239f,0.441691f,0.184609f,0.42311f,0.532011f,0.302541f,0.9432f,0.0560193f,0.262895f,0.241409f,0.145428f,0.316316f,0.764449f,0.107543f,0.773199f,0.508148f,0.00775831f,0.702742f,0.891321f,0.171201f,0.305219f,0.904901f,0.428127f,0.435558f,0.502604f,0.285803f,0.396735f,0.963475f,0.840355f,0.353905f,0.41686f,0.894717f,0.553785f,0.806704f,0.196683f,0.678038f,0.776332f,0.241325f,0.908491f,0.479592f,0.279116f,0.533915f,0.689661f,0.879233f,0.315537f,0.208307f,0.00500109f,0.881549f,0.677103f,0.774383f,0.416695f,0.526238f,0.0831336f,0.13687f,0.666558f,0.0460035f,0.601287f,0.797102f,0.394557f,0.974736f,0.643428f,0.586304f,0.473626f,0.823628f,0.954953f,0.296059f,0.386497f,0.508376f,0.489886f,0.144008f,0.744909f,0.284783f,0.857817f,0.832843f,0.914662f,0.186468f,0.00748893f,0.815519f,0.680362f,0.847246f,0.0720226f,0.860325f,0.789884f,0.82738f,0.971592f,0.167087f,0.175806f,0.465529f,0.265972f,0.326556f,0.68286f,0.639974f,0.818038f,0.455191f,0.168893f,0.19926f,0.704629f,0.29939f,0.60592f,0.632464f,0.932542f,0.997459f,0.693827f,0.922034f,0.547555f,0.872462f,0.768679f,0.158589f,0.889642f,0.788047f,0.205795f,0.606761f,0.464235f,0.335308f,0.469859f,0.384036f,0.365037f,0.509243f,0.719452f,0.456051f,0.932947f,0.273681f,0.859205f,0.271053f,0.0343775f,0.705966f,0.734574f,0.793638f,0.750642f,0.415212f,0.450857f,0.705362f,0.787516f,0.950027f,0.543749f,0.265973f,0.565653f,0.682549f,0.690859f,0.499951f,0.321701f,0.99547f,0.701663f,0.431262f,0.111149f,0.896295f,0.276697f,0.543374f,0.134649f,0.7288f,0.299791f,0.134562f,0.525293f,0.345897f,0.262887f,0.596289f,0.692668f,0.440428f,0.589664f,0.7228f,0.427167f,0.895573f,0.0644652f,0.576086f,0.817547f,0.970838f,0.113292f,0.482636f,0.924655f,0.276034f,0.376611f,0.696f,0.698699f,0.779221f,0.472524f,0.506246f,0.146367f,0.210995f,0.644827f,0.708992f,0.313711f,0.072765f,0.670095f,0.928258f,0.221527f,0.523335f,0.664042f,0.109478f,0.207263f,0.079932f,0.176839f,0.686711f,0.906712f,0.0439875f,0.977414f,0.00705044f,0.998576f,0.827414f,0.11389f,0.354597f,0.656302f,0.534326f,0.79466f,0.838077f,0.762129f,0.223928f,0.867182f,0.853912f,0.517329f,0.573479f,0.292547f,0.17115f,0.958594f,0.759611f,0.695434f,0.453627f,0.982158f,0.754697f,0.716707f,0.524195f,0.646768f,0.171093f,0.454846f,0.347604f,0.189748f,0.579399f,0.166027f,0.900206f,0.892024f,0.367295f,0.228352f,0.115895f,0.295442f,0.447319f,0.910681f,0.721297f,0.484244f,0.520385f,0.762336f,0.189944f,0.688379f,0.843565f,0.684699f,0.73792f,0.377649f,0.727907f,0.000713693f,0.115294f,0.179546f,0.418916f,0.56339f,0.766746f,0.198808f,0.879528f,0.533462f,0.789666f,0.190717f,0.27882f,0.529274f,0.60875f,0.925449f,0.999538f,0.941291f,0.915125f,0.861341f,0.971226f,0.660624f,0.858053f,0.257286f,0.98634f,0.272371f,0.207007f,0.244409f,0.530108f,0.75902f,0.46774f,0.263003f,0.129945f,0.791457f,0.530075f,0.61233f,0.708855f,0.551615f,0.728396f,0.591609f,0.668964f,0.115798f,0.504031f,0.588966f,0.35389f,0.175301f,0.038795f,0.0647323f,0.0821987f,0.523568f,0.902183f,0.234456f,0.389202f,0.953991f,0.353772f,0.162903f,0.939329f,0.714714f,0.793772f,0.677977f,0.348931f,0.160968f,0.666971f,0.272318f,0.611411f,0.811969f,0.424373f,0.836315f,0.714661f,0.307108f,0.669656f,0.506377f,0.225764f,0.0999766f,0.527784f,0.176005f,0.0140051f,0.254351f,0.410044f,0.212395f,0.552615f,0.825598f,0.897967f,0.73811f,0.433818f,0.469532f,0.959268f,0.938359f,0.866672f,0.584202f,0.0580421f,0.479298f,0.581282f,0.942379f,0.163687f,0.339368f,0.0978454f,0.463293f,0.187177f,0.889099f,0.869814f,0.741585f,0.593934f,0.461398f,0.46817f,0.185815f,0.763137f,0.695033f,0.0815168f,0.808364f,0.131995f,0.302333f,0.253878f,0.8783f,0.625264f,0.972665f,0.51435f,0.0920288f,0.689718f,0.110329f,0.861205f,0.254637f,0.725552f,0.214415f,0.081483f,0.702125f,0.456636f,0.94355f,0.104556f,0.373518f,0.236192f,0.885305f,0.423956f,0.433575f,0.787505f,0.204833f,0.585408f,0.712592f,0.0430384f,0.48784f,0.0881832f,0.328901f,0.922197f,0.87015f,0.428452f,0.901498f,0.639949f,0.683178f,0.108318f,0.907537f,0.825947f,0.173591f,0.427554f,0.913982f,0.98431f,0.632093f,0.0172069f,0.8591f,0.218288f,0.194364f,0.614681f,0.804071f,0.771605f,0.980021f,0.714896f,0.924067f,0.749374f,0.689602f,0.838016f,0.538339f,0.2742f,0.516855f,0.977436f,0.900605f,0.126639f,0.784573f,0.526253f,0.0990163f,0.575998f,0.339344f,0.927908f,0.0211111f,0.395668f,0.790059f,0.201836f,0.939652f,0.00808969f,0.919494f,0.0593944f,0.470974f,0.998869f,0.621826f,0.787918f,0.426882f,0.946095f,0.0672336f,0.161124f,0.696783f,0.192896f,0.0395703f,0.0805282f,0.193518f,0.282174f,0.761909f,0.679839f,0.764669f,0.410537f,0.31149f,0.17036f,0.0492137f,0.468382f,0.942446f,0.207613f,0.149208f,0.392895f,0.714652f,0.261003f,0.614429f,0.980819f,0.326889f,0.952999f,0.244492f,0.278271f,0.58536f,0.755384f,0.0407116f,0.442392f,0.674677f,0.132154f,0.597689f,0.0250398f,0.601614f,0.0199593f,0.83372f,0.0155899f,0.377504f,0.530593f,0.792457f,0.928835f,0.384813f,0.0100932f,0.214969f,0.462303f,0.0639783f,0.0872452f,0.0116731f,0.902786f,0.688416f,0.44023f,0.258044f,0.924984f,0.778288f,0.671034f,0.708277f,0.771031f,0.752215f,0.484088f,0.697388f,0.0758607f,0.744497f,0.944957f,0.338986f,0.443782f,0.120114f,0.268719f,0.126621f,0.238591f,0.611809f,0.372969f,0.842732f,0.0548672f,0.396524f,0.725833f,0.684244f,0.983385f,0.766233f,0.620206f,0.414412f,0.410432f,0.604064f,0.96993f,0.0764035f,0.226021f,0.515522f,0.825741f,0.82342f,0.380137f,0.0888949f,0.304793f,0.8932f,0.28183f,0.905898f,0.356197f,0.927997f,0.346685f,0.767012f,0.751379f,0.912739f,0.589238f,0.536779f,0.698589f,0.72528f,0.613594f,0.626452f,0.0146604f,0.477406f,0.323427f,0.106153f,0.777999f,0.265581f,0.658064f,0.714991f,0.121471f,0.898939f,0.658241f,0.206676f,0.128976f,0.208265f,0.955304f,0.772456f,0.70023f,0.0502327f,0.225357f,0.0919609f,0.885891f,0.607491f,0.000462823f,0.445943f,0.472102f,0.312719f,0.243203f,0.601583f,0.330047f,0.587311f,0.117906f,0.390636f,0.12144f,0.852944f,0.0457371f,0.335584f,0.540309f,0.72329f,0.0265907f,0.566799f,0.231772f,0.995137f,0.336858f,0.943392f,0.0333327f,0.677485f,0.924097f,0.868579f,0.11392f,0.631234f,0.679053f,0.309147f,0.890171f,0.276671f,0.987217f,0.21705f,0.437807f,0.473941f,0.898117f,0.77137f,0.336461f,0.961057f,0.324117f,0.864501f,0.970394f,0.486111f,0.876942f,0.0130721f,0.651562f,0.0630578f,0.0526639f,0.779626f,0.911752f,0.715718f,0.299797f,0.299762f,0.740895f,0.620997f,0.552204f,0.325294f,0.367469f,0.705932f,0.512739f,0.125035f,0.486812f,0.321586f,0.609517f,0.123702f,0.640036f,0.508917f,0.115846f,0.802678f,0.101638f,0.812776f,0.816508f,0.409225f,0.35846f,0.452221f,0.120055f,0.473363f,0.899115f,0.103405f,0.74275f,0.576396f,0.269436f,0.0540126f,0.996829f,0.682701f,0.670652f,0.678658f,0.754484f,0.983906f,0.776855f,0.393165f,0.852125f,0.858838f,0.864449f,0.562742f,0.00667925f,0.99562f,0.0566368f,0.633754f,0.601561f,0.801723f,0.376497f,0.481421f,0.153073f,0.840568f,0.773812f,0.364059f,0.491024f,0.779741f,0.958465f,0.215594f,0.797675f,0.946823f,0.655059f,0.258763f,0.376556f,0.205481f,0.151396f,0.877613f,0.982506f,0.506908f,0.0495858f,0.191412f,0.853303f,0.961976f,0.0462063f,0.975305f,0.692913f,0.578614f,0.777377f,0.551982f,0.610155f,0.144673f,0.773517f,0.923062f,0.260347f,0.648044f,0.634663f,0.0126906f,0.858561f,0.126967f,0.325747f,0.187392f,0.827447f,0.0154879f,0.725138f,0.162226f,0.575511f,0.514204f,0.741768f,0.0217911f,0.0239131f,0.123143f,0.997487f,0.289893f,0.71286f,0.222913f,0.330995f,0.370478f,0.433085f,0.118757f,0.672383f,0.955371f,0.141675f,0.377692f,0.909974f,0.55425f,0.911636f,0.683563f,0.396132f,0.678901f,0.278479f,0.156562f,0.563628f,0.901053f,0.299182f,0.956568f,0.630882f,0.739676f,0.77656f,0.530474f,0.564332f,0.966069f,0.450371f,0.976758f,0.204231f,0.270134f,0.15825f,0.873856f,0.0882471f,0.410576f,0.275106f,0.346685f,0.325154f,0.169971f,0.945142f,0.262624f,0.911143f,0.917523f,0.0962264f,0.199994f,0.199085f,0.0601812f,0.542087f,0.779575f,0.668735f,0.711277f,0.951462f,0.743325f,0.657124f,0.523043f,0.385796f,0.895944f,0.963682f,0.979121f,0.859315f,0.741821f,0.375141f,0.307067f,0.294607f,0.247316f,0.41677f,0.0149677f,0.856722f,0.479345f,0.823363f,0.669272f,0.839783f,0.463171f,0.499439f,0.598467f,0.618339f,0.41327f,0.904384f,0.41221f,0.321087f,0.734624f,0.161387f,0.271178f,0.523649f,0.54949f,0.981636f,0.575996f,0.0555991f,0.762012f,0.329759f,0.057602f,0.220281f,0.43538f,0.232487f,0.427403f,0.340611f,0.960258f,0.881764f,0.810433f,0.585328f,0.368245f,0.643449f,0.406264f,0.74102f,0.308166f,0.646687f,0.084892f,0.858417f,0.882379f,0.408191f,0.00159461f,0.0857629f,0.876763f,0.213594f,0.468816f,0.701292f,0.83792f,0.846329f,0.894794f,0.293289f,0.416299f,0.658966f,0.637391f,0.495283f,0.523339f,0.2991f,0.522979f,0.322512f,0.246316f,0.491903f,0.0746255f,7.8445e-005f,0.904303f,0.879546f,0.778357f,0.517641f,0.969689f,0.460999f,0.936057f,0.578991f,0.0354415f,0.00532479f,0.202428f,0.0104537f,0.770735f,0.660301f,0.385332f,0.404694f,0.661421f,0.7097f,0.309723f,0.992693f,0.781668f,0.318379f,0.544805f,0.517141f,0.726662f,0.67657f,0.267566f,0.950086f,0.952819f,0.956471f,0.751015f,0.156489f,0.885997f,0.590631f,0.0632626f,0.899082f,0.891345f,0.659022f,0.367189f,0.719526f,0.878464f,0.359802f,0.130536f,0.556574f,0.869422f,0.33031f,0.414376f,0.030861f,0.136063f,0.621262f,0.501234f,0.49064f,0.870095f,0.0731028f,0.629756f,0.0365925f,0.606673f,0.948068f,0.314643f,0.739759f,0.45731f,0.950961f,0.962672f,0.654756f,0.0389264f,0.555516f,0.579928f,0.448517f,0.275711f,0.686901f,0.778688f,0.518072f,0.0171811f,0.344254f,0.771869f,0.77615f,0.118125f,0.240585f,0.326728f,0.783184f,0.253697f,0.0730975f,0.541266f,0.678179f,0.0704757f,0.245243f,0.223762f,0.236493f,0.263924f,0.487212f,0.639068f,0.91728f,0.605327f,0.388939f,0.0786105f,0.437684f,0.258478f,0.81304f,0.617214f,0.0768097f,0.657798f,0.942781f,0.0959515f,0.616325f,0.344049f,0.84558f,0.330967f,0.0694835f,0.288256f,0.0308165f,0.896685f,0.930698f,0.841653f,0.665053f,0.98484f,0.325124f,0.757799f,0.174019f,0.809325f,0.910923f,0.792643f,0.632893f,0.272109f,0.826541f,0.215005f,0.0165364f,0.814703f,0.372545f,0.146577f,0.0860875f,0.192506f,0.247148f,0.0650242f,0.93575f,0.181761f,0.231522f,0.15142f,0.383365f,0.707312f,0.699399f,0.875437f,0.0813269f,0.56264f,0.308567f,0.922863f,0.721123f,0.526879f,0.41858f,0.152833f,0.663525f,0.443309f,0.467035f,0.883577f,0.204677f,0.87964f,0.168993f,0.54993f,0.940419f,0.665712f,0.247042f,0.962565f,0.780286f,0.110413f,0.316274f,0.273545f,0.482773f,0.802011f,0.53423f,0.560353f,0.916273f,0.134851f,0.348981f,0.939362f,0.0449581f,0.915296f,0.0461536f,0.386969f,0.844952f,0.395561f,0.978895f,0.253651f,0.204729f,0.0593258f,0.326486f,0.284155f,0.855363f,0.518923f,0.386347f,0.988503f,0.556458f,0.135657f,0.871753f,0.193246f,0.174518f,0.349553f,0.518479f,0.99108f,0.439921f,0.336654f,0.424953f,0.692152f,0.0397344f,0.0732937f,0.255473f,0.189967f,0.560782f,0.964629f,0.311403f,0.371387f,0.469203f,0.801392f,0.15174f,0.00626313f,0.270118f,0.543772f,0.743497f,0.493016f,0.746908f,0.803444f,0.0913807f,0.222933f,0.715084f,0.0455235f,0.976007f,0.767568f,0.0694174f,0.276716f,0.19466f,0.372959f,0.786124f,0.766327f,0.500709f,0.300888f,0.199716f,0.855008f,0.239178f,0.469019f,0.399236f,0.232465f,0.16686f,0.916217f,0.973134f,0.568881f,0.827991f,0.782635f,0.456563f,0.974849f,0.554959f,0.603817f,0.373116f,0.589029f,0.841039f,0.658897f,0.399772f,0.909529f,0.496831f,0.383197f,0.570037f,0.630989f,0.530361f,0.405723f,0.563421f,0.304477f,0.121384f,0.495061f,0.368394f,0.441135f,0.2561f,0.784467f,0.00233745f,0.139338f,0.823668f,0.0737295f,0.904712f,0.305897f,0.489576f,0.209418f,0.693599f,0.584805f,0.746791f,0.0616489f,0.336319f,0.527198f,0.498556f,0.435797f,0.0928095f,0.711529f,0.0387021f,0.663306f,0.395635f,0.74644f,0.135885f,0.955952f,0.130559f,0.401306f,0.543889f,0.494105f,0.669044f,0.165496f,0.654862f,0.706325f,0.606464f,0.127183f,0.00191501f,0.726295f,0.283804f,0.601815f,0.936416f,0.781362f,0.0571171f,0.887758f,0.984572f,0.560351f,0.0290583f,0.238925f,0.495611f,0.935334f,0.740145f,0.52368f,0.190798f,0.928253f,0.536712f,0.940612f,0.446011f,0.560453f,0.835647f,0.240708f,0.865762f,0.648615f,0.930527f,0.91781f,0.261324f,0.495436f,0.671955f,0.695916f,0.987204f,0.818232f,0.179836f,0.917276f,0.536846f,0.745422f,0.297516f,0.26617f,0.57758f,0.899882f,0.103532f,0.83507f,0.847112f,0.24138f,0.38546f,0.141282f,0.0320046f,0.720321f,0.129129f,0.575835f,0.637505f,0.106764f,0.33331f,0.406446f,0.258762f,0.345742f,0.714676f,0.837746f,0.305257f,0.91595f,0.551054f,0.65665f,0.341483f,0.514251f,0.0818331f,0.927384f,0.947537f,0.418518f,0.0743022f,0.719434f,0.245735f,0.0963175f,0.440125f,0.799607f,0.883696f,0.488243f,0.27147f,0.99163f,0.657822f,0.556332f,0.724213f,0.25145f,0.547377f,0.323633f,0.892885f,0.946246f,0.891211f,0.578664f,0.381954f,0.300313f,0.0891369f,0.807738f,0.165852f,0.408828f,0.535743f,0.363909f,0.866593f,0.394415f,0.8576f,0.413634f,0.471214f,0.818354f,0.962698f,0.314679f,0.965744f,0.950689f,0.542311f,0.865113f,0.675904f,0.364284f,0.399935f,0.965076f,0.633419f,0.807675f,0.791961f,0.0638251f,0.16986f,0.602568f,0.790007f,0.497242f,0.237209f,0.957598f,0.100894f,0.874651f,0.662847f,0.0249065f,0.266422f,0.509838f,0.418802f,0.715867f,0.335732f,0.788464f,0.407303f,0.491483f,0.61304f,0.981859f,0.0228451f,0.739285f,0.796928f,0.765217f,0.901448f,0.154142f,0.367801f,0.660486f,0.71289f,0.28317f,0.209092f,0.727144f,0.116454f,0.765822f,0.315317f,0.328435f,0.539086f,0.931063f,0.974448f,0.222229f,0.653351f,0.524463f,0.466601f,0.425759f,0.645213f,0.00384574f,0.323541f,0.352734f,0.929033f,0.754713f,0.861587f,0.772162f,0.924614f,0.399458f,0.869766f,0.276495f,0.816722f,0.948672f,0.671535f,0.397998f,0.473555f,0.348371f,0.489812f,0.154705f,0.0956349f,0.87262f,0.718657f,0.275185f,0.644228f,0.462317f,0.41859f,0.443406f,0.279774f,0.0109839f,0.853293f,0.383774f,0.43998f,0.0566688f,0.953749f,0.918813f,0.224911f,0.528944f,0.584639f,0.572144f,0.524427f,0.353038f,0.803346f,0.513382f,0.929365f,0.560225f,0.748667f,0.623791f,0.372897f,0.0871715f,0.383623f,0.229881f,0.246359f,0.0773045f,0.439438f,0.923037f,0.7212f,0.567159f,0.290863f,0.384726f,0.331207f,0.484783f,0.610876f,0.0219879f,0.846834f,0.441678f,0.409397f,0.643356f,0.442426f,0.796379f,0.970346f,0.765176f,0.743199f,0.85982f,0.0291272f,0.870319f,0.433137f,0.900894f,0.106739f,0.593588f,0.304344f,0.637198f,0.808159f,0.742273f,0.923045f,0.192572f,0.771675f,0.320499f,0.220393f,0.322671f,0.0848894f,0.203521f,0.0102857f,0.422723f,0.906651f,0.403297f,0.982788f,0.667101f,0.198767f,0.785043f,0.96548f,0.265053f,0.489191f,0.602004f,0.118682f,0.21581f,0.248936f,0.803059f,0.228406f,0.694657f,0.261616f,0.973546f,0.259526f,0.717017f,0.217286f,0.898507f,0.531694f,0.23164f,0.719053f,0.661841f,0.913046f,0.884217f,0.138001f,0.70729f,0.669928f,0.445826f,0.590217f,0.566312f,0.730487f,0.817962f,0.115635f,0.89675f,0.861756f,0.798587f,0.203239f,0.929635f,0.709423f,0.016198f,0.740575f,0.535218f,0.69317f,0.963725f,0.780653f,0.121621f,0.413643f,0.626379f,0.153731f,0.97754f,0.229516f,0.660571f,0.0464624f,0.757329f,0.411868f,0.0611639f,0.623976f,0.954925f,0.552082f,0.959547f,0.385958f,0.659902f,0.337551f,0.72417f,0.650366f,0.921758f,0.475333f,0.217428f,0.0363314f,0.878906f,0.236808f,0.078046f,0.192366f,0.423525f,0.564184f,0.470329f,0.847225f,0.611151f,0.536519f,0.191473f,0.244716f,0.199764f,0.210875f,0.829096f,0.880414f,0.90384f,0.0590107f,0.21475f,0.902226f,0.193171f,0.772757f,0.670937f,0.46655f,0.840292f,0.968085f,0.274474f,0.842532f,0.465214f,0.594342f,0.89859f,0.610604f,0.930866f,0.461411f,0.740833f,0.902791f,0.238285f,0.700362f,0.448502f,0.792169f,0.39635f,0.306796f,0.493692f,0.755366f,0.678184f,0.485146f,0.843155f,0.499176f,0.27599f,0.179709f,0.83422f,0.018321f,0.419587f,0.861302f,0.385558f,0.462705f,0.651661f,0.488553f,0.24754f,0.807063f,0.561992f,0.320509f,0.354583f,0.564898f,0.515973f,0.500998f,0.94172f,0.105932f,0.140322f,0.151333f,0.402741f,0.398895f,0.820341f,0.890911f,0.061314f,0.879306f,0.350156f,0.500185f,0.4508f,0.875809f,0.243896f,0.610312f,0.810436f,0.98457f,0.105982f,0.696425f,0.24676f,0.558765f,0.634392f,0.420541f,0.671956f,0.431087f,0.843182f,0.483225f,0.598779f,0.796217f,0.614997f,0.171959f,0.582416f,0.332045f,0.171262f,0.277424f,0.124886f,0.589969f,0.527426f,0.607403f,0.0592987f,0.336458f,0.12011f,0.201759f,0.201452f,0.164375f,0.905426f,0.0490471f,0.283515f,0.928881f,0.91195f,0.169419f,0.803325f,0.80263f,0.981445f,0.465364f,0.632779f,0.151134f,0.630822f,0.103398f,0.0254437f,0.940896f,0.346818f,0.0986557f,0.923509f,0.748267f,0.958398f,0.242726f,0.23841f,0.0838539f,0.33556f,0.851027f,0.749221f,0.645384f,0.337608f,0.532414f,0.892086f,0.286268f,0.536324f,0.297366f,0.28884f,0.435107f,0.135309f,0.46432f,0.97627f,0.37104f,0.185826f,0.508475f,0.208028f,0.0780732f,0.784221f,0.79722f,0.388445f,0.495982f,0.675447f,0.213059f,0.754742f,0.870486f,0.205806f,0.969568f,0.134453f,0.556191f,0.780812f,0.920867f,0.0470477f,0.874899f,0.469395f,0.641365f,0.125295f,0.991631f,0.877727f,0.290063f,0.510416f,0.836726f,0.0134675f,0.528281f,0.542372f,0.0349166f,0.893473f,0.378395f,0.514739f,0.699472f,0.951674f,0.883303f,0.80935f,0.464443f,0.0438049f,0.363421f,0.227028f,0.130145f,0.0100327f,0.329677f,0.0383763f,0.290237f,0.604287f,0.878311f,0.0472817f,0.740482f,0.501433f,0.697189f,0.714562f,0.176482f,0.271253f,0.322067f,0.0166131f,0.627085f,0.76129f,0.626636f,0.133879f,0.848167f,0.959807f,0.96773f,0.236835f,0.16953f,0.0602073f,0.173017f,0.633949f,0.551262f,0.209558f,0.93738f,0.616295f,0.0182512f,0.143415f,0.844934f,0.617452f,0.492005f,0.437553f,0.534461f,0.941079f,0.283974f,0.622426f,0.564133f,0.740807f,0.786428f,0.324597f,0.661679f,0.528713f,0.715158f,0.782448f,0.829301f,0.375625f,0.179818f,0.729873f,0.0894799f,0.475436f,0.295332f,0.479144f,0.742509f,0.846809f,0.308548f,0.0181656f,0.899089f,0.595207f,0.500896f,0.755547f,0.582197f,0.00892669f,0.590772f,0.79614f,0.636272f,0.0865137f,0.000400858f,0.577904f,0.300942f,0.357874f,0.122029f,0.378619f,0.166174f,0.681148f,0.0161585f,0.404783f,0.520175f,0.591442f,0.659904f,0.964519f,0.548123f,0.214151f,0.0457445f,0.264102f,0.160863f,0.00167315f,0.086267f,0.992296f,0.51083f,0.114924f,0.124341f,0.856497f,0.922631f,0.22585f,0.583768f,0.092772f,0.625299f,0.637149f,0.72043f,0.84873f,0.910084f,0.0808401f,0.87427f,0.431572f,0.826047f,0.759342f,0.873891f,0.470554f,0.82748f,0.715528f,0.438139f,0.797233f,0.601063f,0.00423314f,0.799127f,0.680482f,0.953272f,0.362146f,0.00586606f,0.526145f,0.462703f,0.433653f,0.16268f,0.728373f,0.671521f,0.330962f,0.0871261f,0.804806f,0.684331f,0.677947f,0.691644f,0.809157f,0.906235f,0.455602f,0.641041f,0.138676f,0.759259f,0.052318f,0.7004f,0.155272f,0.527253f,0.959527f,0.962787f,0.0575192f,0.26707f,0.306542f,0.018849f,0.540003f,0.953501f,0.646708f,0.680009f,0.326098f,0.258661f,0.631946f,0.00577f,0.435564f,0.76403f,0.842939f,0.192828f,0.979325f,0.191665f,0.0879078f,0.377166f,0.344783f,0.259401f,0.497762f,0.995773f,0.58316f,0.741265f,0.981677f,0.177416f,0.329115f,0.793979f,0.0705367f,0.680194f,0.688137f,0.333306f,0.680309f,0.347924f,0.319998f,0.842462f,0.890384f,0.763341f,0.876062f,0.529042f,0.651628f,0.645724f,0.595985f,0.479623f,0.130402f,0.0193731f,0.768802f,0.429958f,0.702744f,0.148294f,0.169341f,0.148534f,0.504204f,0.250727f,0.6189f,0.445693f,0.491261f,0.325889f,0.406374f,0.841954f,0.614259f,0.815679f,0.378636f,0.477352f,0.95838f,0.303468f,0.836013f,0.359254f,0.787635f,0.724289f,0.0889057f,0.999074f,0.873233f,0.595166f,0.603398f,0.586113f,0.918738f,0.294356f,0.790441f,0.641907f,0.483123f,0.763519f,0.717748f,0.120373f,0.474139f,0.431704f,0.158093f,0.710889f,0.764159f,0.0107394f,0.17815f,0.879489f,0.905709f,0.00914567f,0.382773f,0.424317f,0.946208f,0.458462f,0.934147f,0.360029f,0.0908572f,0.0748174f,0.55021f,0.905336f,0.528543f,0.317171f,0.539526f,0.0056937f,0.578706f,0.401794f,0.356387f,0.238194f,0.568962f,0.504652f,0.524591f,0.659351f,0.539575f,0.193907f,0.0501228f,0.103211f,0.861701f,0.0928236f,0.118399f,0.960386f,0.464065f,0.462186f,0.223749f,0.783675f,0.41981f,0.997503f,0.205461f,0.314207f,0.343356f,0.459535f,0.0698174f,0.980991f,0.671963f,0.668571f,0.0595499f,0.242049f,0.640997f,0.622202f,0.202451f,0.585023f,0.116969f,0.274842f,0.561636f,0.498952f,0.562897f,0.965908f,0.259299f,0.761942f,0.156429f,0.575014f,0.274453f,0.422674f,0.532318f,0.13675f,0.809351f,0.0507262f,0.837969f,0.758922f,0.33732f,0.833217f,0.380397f,0.79624f,0.249372f,0.509206f,0.967494f,0.874991f,0.933832f,0.974842f,0.198491f,0.511616f,0.0773459f,0.0394034f,0.617254f,0.165966f,0.262446f,0.848435f,0.0883463f,0.773933f,0.198017f,0.396429f,0.11225f,0.216011f,0.12153f,0.783211f,0.539996f,0.977417f,0.548293f,0.441791f,0.685907f,0.364944f,0.459616f,0.702906f,0.189505f,0.655996f,0.0880187f,0.405877f,0.0983226f,0.843005f,0.454448f,0.636149f,0.452542f,0.569996f,0.537f,0.679384f,0.874904f,0.392433f,0.688863f,0.148975f,0.50114f,0.864462f,0.654969f,0.0847118f,0.96589f,0.450241f,0.140698f,0.146521f,0.398976f,0.185366f,0.825774f,0.0405722f,0.175783f,0.476493f,0.661003f,0.932548f,0.784114f,0.554015f,0.460409f,0.668652f,0.294312f,0.65338f,0.34617f,0.42172f,0.801059f,0.964518f,0.266547f,0.139621f,0.455713f,0.999931f,0.135437f,0.151911f,0.570752f,0.979861f,0.0875793f,0.234683f,0.492545f,0.924679f,0.362731f,0.804425f,0.685403f,0.435503f,0.187826f,0.246328f,0.107991f,0.196117f,0.419881f,0.901014f,0.636307f,0.886187f,0.761935f,0.185654f,0.20067f,0.570181f,0.107333f,0.716814f,0.101034f,0.0105145f,0.100285f,0.626739f,0.234296f,0.440237f,0.717189f,0.96987f,0.319504f,0.27466f,0.1796f,0.705884f,0.642369f,0.879529f,0.602136f,0.586218f,0.899861f,0.223626f,0.00162988f,0.703812f,0.524971f,0.599654f,0.583424f,0.537509f,0.649929f,0.886754f,0.0251348f,0.990828f,0.9492f,0.0717774f,0.130551f,0.946622f,0.352109f,0.907082f,0.0815199f,0.20278f,0.338609f,0.773468f,0.157793f,0.814205f,0.24474f,0.180947f,0.380239f,0.575415f,0.38419f,0.641465f,0.164639f,0.328534f,0.996143f,0.72114f,0.923903f,0.75851f,0.521649f,0.230333f,0.946098f,0.706686f,0.208905f,0.958686f,0.42084f,0.730659f,0.237007f,0.88613f,0.309582f,0.332105f,0.678688f,0.0263163f,0.544233f,0.586047f,0.995924f,0.0979156f,0.724884f,0.755969f,0.302062f,0.413996f,0.515113f,0.522249f,0.230344f,0.786732f,0.0744869f,0.117197f,0.5627f,0.306073f,0.894952f,0.269944f,0.917451f,0.0393496f,0.732564f,0.349196f,0.763229f,0.171622f,0.711653f,0.210948f,0.855722f,0.404091f,0.381293f,0.299304f,0.66514f,0.377637f,0.352407f,0.581496f,0.387328f,0.394303f,0.0976539f,0.60196f,0.292504f,0.204022f,0.184426f,0.919543f,0.841935f,0.982006f,0.738204f,0.100333f,0.233818f,0.398588f,0.569684f,0.242966f,0.0231002f,0.930467f,0.0958806f,0.981614f,0.199327f,0.19193f,0.83418f,0.46452f,0.611246f,0.78421f,0.705848f,0.787105f,0.950402f,0.381167f,0.148465f,0.627151f,0.0483577f,0.0171834f,0.647508f,0.696912f,0.300081f,0.0129141f,0.619884f,0.934829f,0.499489f,0.63633f,0.605274f,0.513395f,0.377452f,0.820883f,0.0720689f,0.948211f,0.0158378f,0.326114f,0.442176f,0.867679f,0.458628f,0.02637f,0.0384894f,0.749154f,0.70228f,0.616308f,0.569735f,0.523683f,0.682185f,0.410394f,0.653597f,0.811993f,0.380898f,0.273919f,0.329399f,0.381108f,0.216364f,0.610808f,0.85663f,0.0579701f,0.092253f,0.251526f,0.0442808f,0.835742f,0.843404f,0.977972f,0.390873f,0.039428f,0.138996f,0.761555f,0.247493f,0.0402716f,0.466832f,0.897306f,0.52393f,0.7824f,0.342573f,0.274865f,0.914161f,0.754331f,0.588159f,0.365527f,0.825172f,0.826902f,0.711998f,0.65461f,0.434923f,0.614749f,0.072054f,0.269705f,0.109299f,0.875851f,0.899521f,0.00300577f,0.901822f,0.877101f,0.979921f,0.994199f,0.321955f,0.180382f,0.147204f,0.672304f,0.287426f,0.321083f,0.510224f,0.346136f,0.770496f,0.869235f,0.840596f,0.0502891f,0.968293f,0.791344f,0.322162f,0.399061f,0.590243f,0.143087f,0.200315f,0.125404f,0.162113f,0.552793f,0.966754f,0.361113f,0.688789f,0.898306f,0.602262f,0.617228f,0.58926f,0.527837f,0.482833f,0.837079f,0.505726f};
*/

#include "noiseTables.h"

// Helper gradient functions
template <class T>	T  grad(int hash,T x) {
    int h		= hash & 15;
    T	grad	= (T) 1.0 + (h & 7);
    if (h&8) grad = -grad;
    return ( grad * x );
}

template <class T>	T  grad(int hash,T x,T y) {
    int		h = hash & 7;
    const T	u = h<4 ? x : y;
    const T	v = h<4 ? y : x;
    return ((h&1)? -u : u) + ((h&2)? (T) -2.0*v : (T) 2.0*v);
}

template <class T>	T  grad(int hash,T x,T y ,T z) {
    int		h = hash & 15;
    const T	u = h<8 ? x : y;
    const T	v = h<4 ? y : h==12||h==14 ? x : z;
    return ((h&1)? -u : u) + ((h&2)? -v : v);
}

template <class T>	T  grad(int hash,T x,T y,T z,T t ) {
    int		h = hash & 31;
    const T	u = h<24 ? x : y;
    const T	v = h<16 ? y : z;
    const T	w = h<8 ? z : t;
    return ((h&1)? -u : u) + ((h&2)? -v : v) + ((h&4)? -w : w);
}




/////////////////////////////////////////////////////////////////////////////////
//
//	Noise functions start here
//
/////////////////////////////////////////////////////////////////////////////////




template <class T>	T  noise(T x,const unsigned char *perm) {
    int ix0, ix1;
    T	fx0, fx1;
    T	s, n0, n1;

    ix0 = FASTFLOOR( x );
    fx0 = x - ix0;
    fx1 = fx0 - 1.0f;
    ix1 = ( ix0+1 ) & 0xff;
    ix0 = ix0 & 0xff;

    s	= FADE( fx0 );

    n0	= grad( perm[ ix0 ], fx0 );
    n1	= grad( perm[ ix1 ], fx1 );
    return 0.5f * (1.0f + 0.188f * ( LERP( s, n0, n1 ) ));
}

template <class T>	T	pnoise(T x,int px,const unsigned char *perm) {
    int ix0, ix1;
    T	fx0, fx1;
    T	s, n0, n1;

    ix0 = FASTFLOOR( x );
    fx0 = x - ix0;
    fx1 = fx0 - 1.0f;
    ix1 = (( ix0 + 1 ) % px) & 0xff;
    ix0 = ( ix0 % px ) & 0xff;

    s = FADE( fx0 );

    n0 = grad( perm[ ix0 ], fx0 );
    n1 = grad( perm[ ix1 ], fx1 );
    return 0.5f * (1.0f + 0.188f * ( LERP( s, n0, n1 ) ));
}


template <class T>	T  noise(T x,T y,const unsigned char *perm) {
    int ix0, iy0, ix1, iy1;
    T	fx0, fy0, fx1, fy1;
    T	s, t, nx0, nx1, n0, n1;

    ix0 = FASTFLOOR( x );
    iy0 = FASTFLOOR( y );
    fx0 = x - ix0;
    fy0 = y - iy0;
    fx1 = fx0 - 1.0f;
    fy1 = fy0 - 1.0f;
    ix1 = (ix0 + 1) & 0xff;
    iy1 = (iy0 + 1) & 0xff;
    ix0 = ix0 & 0xff;
    iy0 = iy0 & 0xff;
    
    t = FADE( fy0 );
    s = FADE( fx0 );

    nx0 = grad(perm[ix0 + perm[iy0]], fx0, fy0);
    nx1 = grad(perm[ix0 + perm[iy1]], fx0, fy1);
    n0 = LERP( t, nx0, nx1 );

    nx0 = grad(perm[ix1 + perm[iy0]], fx1, fy0);
    nx1 = grad(perm[ix1 + perm[iy1]], fx1, fy1);
    n1 = LERP(t, nx0, nx1);

    return 0.5f * (1.0f + 0.507f * ( LERP( s, n0, n1 ) ) );
}

template <class T>	T  pnoise(T x,T y, int px, int py,const unsigned char *perm) {
    int ix0, iy0, ix1, iy1;
    T	fx0, fy0, fx1, fy1;
    T	s, t, nx0, nx1, n0, n1;

    ix0 = FASTFLOOR( x );
    iy0 = FASTFLOOR( y );
    fx0 = x - ix0;
    fy0 = y - iy0;
    fx1 = fx0 - 1.0f;
    fy1 = fy0 - 1.0f;
    ix1 = (( ix0 + 1 ) % px) & 0xff;
    iy1 = (( iy0 + 1 ) % py) & 0xff;
    ix0 = ( ix0 % px ) & 0xff;
    iy0 = ( iy0 % py ) & 0xff;
    
    t = FADE( fy0 );
    s = FADE( fx0 );

    nx0 = grad(perm[ix0 + perm[iy0]], fx0, fy0);
    nx1 = grad(perm[ix0 + perm[iy1]], fx0, fy1);
    n0 = LERP( t, nx0, nx1 );

    nx0 = grad(perm[ix1 + perm[iy0]], fx1, fy0);
    nx1 = grad(perm[ix1 + perm[iy1]], fx1, fy1);
    n1 = LERP(t, nx0, nx1);

    return 0.5f * (1.0f + 0.507f * ( LERP( s, n0, n1 ) ) );
}


template <class T>	T  noise(T x,T y,T z,const unsigned char *perm) {
    int ix0, iy0, ix1, iy1, iz0, iz1;
    T	fx0, fy0, fz0, fx1, fy1, fz1;
    T	s, t, r;
    T	nxy0, nxy1, nx0, nx1, n0, n1;

    ix0 = FASTFLOOR( x );
    iy0 = FASTFLOOR( y );
    iz0 = FASTFLOOR( z );
    fx0 = x - ix0;
    fy0 = y - iy0;
    fz0 = z - iz0;
    fx1 = fx0 - 1.0f;
    fy1 = fy0 - 1.0f;
    fz1 = fz0 - 1.0f;
    ix1 = ( ix0 + 1 ) & 0xff;
    iy1 = ( iy0 + 1 ) & 0xff;
    iz1 = ( iz0 + 1 ) & 0xff;
    ix0 = ix0 & 0xff;
    iy0 = iy0 & 0xff;
    iz0 = iz0 & 0xff;
    
    r = FADE( fz0 );
    t = FADE( fy0 );
    s = FADE( fx0 );

    nxy0 = grad(perm[ix0 + perm[iy0 + perm[iz0]]], fx0, fy0, fz0);
    nxy1 = grad(perm[ix0 + perm[iy0 + perm[iz1]]], fx0, fy0, fz1);
    nx0 = LERP( r, nxy0, nxy1 );

    nxy0 = grad(perm[ix0 + perm[iy1 + perm[iz0]]], fx0, fy1, fz0);
    nxy1 = grad(perm[ix0 + perm[iy1 + perm[iz1]]], fx0, fy1, fz1);
    nx1 = LERP( r, nxy0, nxy1 );

    n0 = LERP( t, nx0, nx1 );

    nxy0 = grad(perm[ix1 + perm[iy0 + perm[iz0]]], fx1, fy0, fz0);
    nxy1 = grad(perm[ix1 + perm[iy0 + perm[iz1]]], fx1, fy0, fz1);
    nx0 = LERP( r, nxy0, nxy1 );

    nxy0 = grad(perm[ix1 + perm[iy1 + perm[iz0]]], fx1, fy1, fz0);
    nxy1 = grad(perm[ix1 + perm[iy1 + perm[iz1]]], fx1, fy1, fz1);
    nx1 = LERP( r, nxy0, nxy1 );

    n1 = LERP( t, nx0, nx1 );
    
    return 0.5f * (1.0f + 0.936f * ( LERP( s, n0, n1 ) ) );
}

template <class T>	T   pnoise(T x,T y,T z,int px,int py,int pz,const unsigned char *perm) {
    int ix0, iy0, ix1, iy1, iz0, iz1;
    T fx0, fy0, fz0, fx1, fy1, fz1;
    T s, t, r;
    T nxy0, nxy1, nx0, nx1, n0, n1;

    ix0 = FASTFLOOR( x );
    iy0 = FASTFLOOR( y );
    iz0 = FASTFLOOR( z );
    fx0 = x - ix0;
    fy0 = y - iy0;
    fz0 = z - iz0;
    fx1 = fx0 - 1.0f;
    fy1 = fy0 - 1.0f;
    fz1 = fz0 - 1.0f;
    ix1 = (( ix0 + 1 ) % px ) & 0xff;
    iy1 = (( iy0 + 1 ) % py ) & 0xff;
    iz1 = (( iz0 + 1 ) % pz ) & 0xff;
    ix0 = ( ix0 % px ) & 0xff;
    iy0 = ( iy0 % py ) & 0xff;
    iz0 = ( iz0 % pz ) & 0xff;
    
    r = FADE( fz0 );
    t = FADE( fy0 );
    s = FADE( fx0 );

    nxy0 = grad(perm[ix0 + perm[iy0 + perm[iz0]]], fx0, fy0, fz0);
    nxy1 = grad(perm[ix0 + perm[iy0 + perm[iz1]]], fx0, fy0, fz1);
    nx0 = LERP( r, nxy0, nxy1 );

    nxy0 = grad(perm[ix0 + perm[iy1 + perm[iz0]]], fx0, fy1, fz0);
    nxy1 = grad(perm[ix0 + perm[iy1 + perm[iz1]]], fx0, fy1, fz1);
    nx1 = LERP( r, nxy0, nxy1 );

    n0 = LERP( t, nx0, nx1 );

    nxy0 = grad(perm[ix1 + perm[iy0 + perm[iz0]]], fx1, fy0, fz0);
    nxy1 = grad(perm[ix1 + perm[iy0 + perm[iz1]]], fx1, fy0, fz1);
    nx0 = LERP( r, nxy0, nxy1 );

    nxy0 = grad(perm[ix1 + perm[iy1 + perm[iz0]]], fx1, fy1, fz0);
    nxy1 = grad(perm[ix1 + perm[iy1 + perm[iz1]]], fx1, fy1, fz1);
    nx1 = LERP( r, nxy0, nxy1 );

    n1 = LERP( t, nx0, nx1 );
    
    return 0.5f * (1.0f + 0.936f * ( LERP( s, n0, n1 ) ) );
}


template <class T>	T  noise(T x,T y,T z,T w,const unsigned char *perm) {
    int ix0, iy0, iz0, iw0, ix1, iy1, iz1, iw1;
    T fx0, fy0, fz0, fw0, fx1, fy1, fz1, fw1;
    T s, t, r, q;
    T nxyz0, nxyz1, nxy0, nxy1, nx0, nx1, n0, n1;

    ix0 = FASTFLOOR( x );
    iy0 = FASTFLOOR( y );
    iz0 = FASTFLOOR( z );
    iw0 = FASTFLOOR( w );
    fx0 = x - ix0;
    fy0 = y - iy0;
    fz0 = z - iz0;
    fw0 = w - iw0;
    fx1 = fx0 - 1.0f;
    fy1 = fy0 - 1.0f;
    fz1 = fz0 - 1.0f;
    fw1 = fw0 - 1.0f;
    ix1 = ( ix0 + 1 ) & 0xff;
    iy1 = ( iy0 + 1 ) & 0xff;
    iz1 = ( iz0 + 1 ) & 0xff;
    iw1 = ( iw0 + 1 ) & 0xff;
    ix0 = ix0 & 0xff;
    iy0 = iy0 & 0xff;
    iz0 = iz0 & 0xff;
    iw0 = iw0 & 0xff;

    q = FADE( fw0 );
    r = FADE( fz0 );
    t = FADE( fy0 );
    s = FADE( fx0 );

    nxyz0 = grad(perm[ix0 + perm[iy0 + perm[iz0 + perm[iw0]]]], fx0, fy0, fz0, fw0);
    nxyz1 = grad(perm[ix0 + perm[iy0 + perm[iz0 + perm[iw1]]]], fx0, fy0, fz0, fw1);
    nxy0 = LERP( q, nxyz0, nxyz1 );
        
    nxyz0 = grad(perm[ix0 + perm[iy0 + perm[iz1 + perm[iw0]]]], fx0, fy0, fz1, fw0);
    nxyz1 = grad(perm[ix0 + perm[iy0 + perm[iz1 + perm[iw1]]]], fx0, fy0, fz1, fw1);
    nxy1 = LERP( q, nxyz0, nxyz1 );
        
    nx0 = LERP ( r, nxy0, nxy1 );

    nxyz0 = grad(perm[ix0 + perm[iy1 + perm[iz0 + perm[iw0]]]], fx0, fy1, fz0, fw0);
    nxyz1 = grad(perm[ix0 + perm[iy1 + perm[iz0 + perm[iw1]]]], fx0, fy1, fz0, fw1);
    nxy0 = LERP( q, nxyz0, nxyz1 );
        
    nxyz0 = grad(perm[ix0 + perm[iy1 + perm[iz1 + perm[iw0]]]], fx0, fy1, fz1, fw0);
    nxyz1 = grad(perm[ix0 + perm[iy1 + perm[iz1 + perm[iw1]]]], fx0, fy1, fz1, fw1);
    nxy1 = LERP( q, nxyz0, nxyz1 );

    nx1 = LERP ( r, nxy0, nxy1 );

    n0 = LERP( t, nx0, nx1 );

    nxyz0 = grad(perm[ix1 + perm[iy0 + perm[iz0 + perm[iw0]]]], fx1, fy0, fz0, fw0);
    nxyz1 = grad(perm[ix1 + perm[iy0 + perm[iz0 + perm[iw1]]]], fx1, fy0, fz0, fw1);
    nxy0 = LERP( q, nxyz0, nxyz1 );
        
    nxyz0 = grad(perm[ix1 + perm[iy0 + perm[iz1 + perm[iw0]]]], fx1, fy0, fz1, fw0);
    nxyz1 = grad(perm[ix1 + perm[iy0 + perm[iz1 + perm[iw1]]]], fx1, fy0, fz1, fw1);
    nxy1 = LERP( q, nxyz0, nxyz1 );

    nx0 = LERP ( r, nxy0, nxy1 );

    nxyz0 = grad(perm[ix1 + perm[iy1 + perm[iz0 + perm[iw0]]]], fx1, fy1, fz0, fw0);
    nxyz1 = grad(perm[ix1 + perm[iy1 + perm[iz0 + perm[iw1]]]], fx1, fy1, fz0, fw1);
    nxy0 = LERP( q, nxyz0, nxyz1 );
        
    nxyz0 = grad(perm[ix1 + perm[iy1 + perm[iz1 + perm[iw0]]]], fx1, fy1, fz1, fw0);
    nxyz1 = grad(perm[ix1 + perm[iy1 + perm[iz1 + perm[iw1]]]], fx1, fy1, fz1, fw1);
    nxy1 = LERP( q, nxyz0, nxyz1 );

    nx1 = LERP ( r, nxy0, nxy1 );

    n1 = LERP( t, nx0, nx1 );

    return 0.5f * (1.0f + 0.87f * ( LERP( s, n0, n1 ) ) );
}

template <class T>	T  pnoise(T x,T y,T z, float w,int px,int py,int pz,int pw,const unsigned char *perm) {
    int ix0, iy0, iz0, iw0, ix1, iy1, iz1, iw1;
    T fx0, fy0, fz0, fw0, fx1, fy1, fz1, fw1;
    T s, t, r, q;
    T nxyz0, nxyz1, nxy0, nxy1, nx0, nx1, n0, n1;

    ix0 = FASTFLOOR( x );
    iy0 = FASTFLOOR( y );
    iz0 = FASTFLOOR( z );
    iw0 = FASTFLOOR( w );
    fx0 = x - ix0;
    fy0 = y - iy0;
    fz0 = z - iz0;
    fw0 = w - iw0;
    fx1 = fx0 - 1.0f;
    fy1 = fy0 - 1.0f;
    fz1 = fz0 - 1.0f;
    fw1 = fw0 - 1.0f;
    ix1 = (( ix0 + 1 ) % px ) & 0xff;
    iy1 = (( iy0 + 1 ) % py ) & 0xff;
    iz1 = (( iz0 + 1 ) % pz ) & 0xff;
    iw1 = (( iw0 + 1 ) % pw ) & 0xff;
    ix0 = ( ix0 % px ) & 0xff;
    iy0 = ( iy0 % py ) & 0xff;
    iz0 = ( iz0 % pz ) & 0xff;
    iw0 = ( iw0 % pw ) & 0xff;

    q = FADE( fw0 );
    r = FADE( fz0 );
    t = FADE( fy0 );
    s = FADE( fx0 );

    nxyz0 = grad(perm[ix0 + perm[iy0 + perm[iz0 + perm[iw0]]]], fx0, fy0, fz0, fw0);
    nxyz1 = grad(perm[ix0 + perm[iy0 + perm[iz0 + perm[iw1]]]], fx0, fy0, fz0, fw1);
    nxy0 = LERP( q, nxyz0, nxyz1 );
        
    nxyz0 = grad(perm[ix0 + perm[iy0 + perm[iz1 + perm[iw0]]]], fx0, fy0, fz1, fw0);
    nxyz1 = grad(perm[ix0 + perm[iy0 + perm[iz1 + perm[iw1]]]], fx0, fy0, fz1, fw1);
    nxy1 = LERP( q, nxyz0, nxyz1 );
        
    nx0 = LERP ( r, nxy0, nxy1 );

    nxyz0 = grad(perm[ix0 + perm[iy1 + perm[iz0 + perm[iw0]]]], fx0, fy1, fz0, fw0);
    nxyz1 = grad(perm[ix0 + perm[iy1 + perm[iz0 + perm[iw1]]]], fx0, fy1, fz0, fw1);
    nxy0 = LERP( q, nxyz0, nxyz1 );
        
    nxyz0 = grad(perm[ix0 + perm[iy1 + perm[iz1 + perm[iw0]]]], fx0, fy1, fz1, fw0);
    nxyz1 = grad(perm[ix0 + perm[iy1 + perm[iz1 + perm[iw1]]]], fx0, fy1, fz1, fw1);
    nxy1 = LERP( q, nxyz0, nxyz1 );

    nx1 = LERP ( r, nxy0, nxy1 );

    n0 = LERP( t, nx0, nx1 );

    nxyz0 = grad(perm[ix1 + perm[iy0 + perm[iz0 + perm[iw0]]]], fx1, fy0, fz0, fw0);
    nxyz1 = grad(perm[ix1 + perm[iy0 + perm[iz0 + perm[iw1]]]], fx1, fy0, fz0, fw1);
    nxy0 = LERP( q, nxyz0, nxyz1 );
        
    nxyz0 = grad(perm[ix1 + perm[iy0 + perm[iz1 + perm[iw0]]]], fx1, fy0, fz1, fw0);
    nxyz1 = grad(perm[ix1 + perm[iy0 + perm[iz1 + perm[iw1]]]], fx1, fy0, fz1, fw1);
    nxy1 = LERP( q, nxyz0, nxyz1 );

    nx0 = LERP ( r, nxy0, nxy1 );

    nxyz0 = grad(perm[ix1 + perm[iy1 + perm[iz0 + perm[iw0]]]], fx1, fy1, fz0, fw0);
    nxyz1 = grad(perm[ix1 + perm[iy1 + perm[iz0 + perm[iw1]]]], fx1, fy1, fz0, fw1);
    nxy0 = LERP( q, nxyz0, nxyz1 );
        
    nxyz0 = grad(perm[ix1 + perm[iy1 + perm[iz1 + perm[iw0]]]], fx1, fy1, fz1, fw0);
    nxyz1 = grad(perm[ix1 + perm[iy1 + perm[iz1 + perm[iw1]]]], fx1, fy1, fz1, fw1);
    nxy1 = LERP( q, nxyz0, nxyz1 );

    nx1 = LERP ( r, nxy0, nxy1 );

    n1 = LERP( t, nx0, nx1 );

    return 0.5f * (1.0f + 0.87f * ( LERP( s, n0, n1 ) ) );
}
















///////////////////////////////////////////////////////////////////////
// Function				:	noiseFloat1D
// Description			:
// Return Value			:
// Comments				:
float noiseFloat(float arg) {
	return	noise<float>(arg,permX);
}

///////////////////////////////////////////////////////////////////////
// Function				:	noiseFloat2D
// Description			:
// Return Value			:
// Comments				:
float noiseFloat(float uarg,float varg) {
	return	noise<float>(uarg,varg,permX);
}

///////////////////////////////////////////////////////////////////////
// Function				:	noiseFloat3D
// Description			:
// Return Value			:
// Comments				:
float noiseFloat(const float *vec) {
	return	noise<float>(vec[0],vec[1],vec[2],permX);
}

///////////////////////////////////////////////////////////////////////
// Function				:	noiseFloat4D
// Description			:
// Return Value			:
// Comments				:
float	noiseFloat(const float *argu,float argv) {
	return	noise<float>(argu[0],argu[1],argu[2],argv,permX);
}

///////////////////////////////////////////////////////////////////////
// Function				:	noiseVector1D
// Description			:
// Return Value			:
// Comments				:
void noiseVector(float *r,float arg) {
	r[0]	=	noise<float>(arg,permX);
	r[1]	=	noise<float>(arg,permY);
	r[2]	=	noise<float>(arg,permZ);
}

///////////////////////////////////////////////////////////////////////
// Function				:	noiseVector2D
// Description			:
// Return Value			:
// Comments				:
void noiseVector(float *r,float uarg,float varg) {
	r[0]	=	noise<float>(uarg,varg,permX);
	r[1]	=	noise<float>(uarg,varg,permY);
	r[2]	=	noise<float>(uarg,varg,permZ);
}

///////////////////////////////////////////////////////////////////////
// Function				:	noiseVector3D
// Description			:
// Return Value			:
// Comments				:
void noiseVector(float *r,const float *vec) {
	r[0]	=	noise<float>(vec[0],vec[1],vec[2],permX);
	r[1]	=	noise<float>(vec[0],vec[1],vec[2],permY);
	r[2]	=	noise<float>(vec[0],vec[1],vec[2],permZ);
}


///////////////////////////////////////////////////////////////////////
// Function				:	noiseVector4D
// Description			:
// Return Value			:
// Comments				:
void	noiseVector(float *r,const float *argu,float argv) {
	r[0]	=		noise<float>(argu[0],argu[1],argu[2],argv,permX);
	r[1]	=		noise<float>(argu[0],argu[1],argu[2],argv,permY);
	r[2]	=		noise<float>(argu[0],argu[1],argu[2],argv,permZ);
}



///////////////////////////////////////////////////////////////////////
// Function				:	pnoiseFloat1D
// Description			:
// Return Value			:
// Comments				:
float	pnoiseFloat(float u,float uperiod) {
	return pnoise<float>(u,(int) uperiod,permX);
}


///////////////////////////////////////////////////////////////////////
// Function				:	pnoiseFloat2D
// Description			:
// Return Value			:
// Comments				:
float	pnoiseFloat(float u,float v,float uperiod,float vperiod) {
	return pnoise<float>(u,v,(int) uperiod,(int) vperiod,permX);
}

///////////////////////////////////////////////////////////////////////
// Function				:	pnoiseFloat3D
// Description			:
// Return Value			:
// Comments				:
float	pnoiseFloat(const float *arg,const float *periods) {
	return pnoise<float>(arg[0],arg[1],arg[2],(int) periods[0],(int) periods[1],(int) periods[2],permX);
}

///////////////////////////////////////////////////////////////////////
// Function				:	pnoiseFloat4D
// Description			:
// Return Value			:
// Comments				:
float	pnoiseFloat(const float *arg,float w,const float *periods,float wperiod) {
	return pnoise<float>(arg[0],arg[1],arg[2],w,(int) periods[0],(int) periods[1],(int) periods[2],(int) wperiod,permX);
}

///////////////////////////////////////////////////////////////////////
// Function				:	pnoiseVector1D
// Description			:
// Return Value			:
// Comments				:
void	pnoiseVector(float *r,float u,float uperiod) {
	r[0]	=	pnoise<float>(u,(int) uperiod,permX);
	r[1]	=	pnoise<float>(u,(int) uperiod,permY);
	r[2]	=	pnoise<float>(u,(int) uperiod,permZ);
}

///////////////////////////////////////////////////////////////////////
// Function				:	pnoiseVector2D
// Description			:
// Return Value			:
// Comments				:
void	pnoiseVector(float *r,float u,float v,float uperiod,float vperiod) {
	r[0]	=	pnoise<float>(u,v,(int) uperiod,(int) vperiod,permX);
	r[1]	=	pnoise<float>(u,v,(int) uperiod,(int) vperiod,permY);
	r[2]	=	pnoise<float>(u,v,(int) uperiod,(int) vperiod,permZ);
}

///////////////////////////////////////////////////////////////////////
// Function				:	pnoiseVector3D
// Description			:
// Return Value			:
// Comments				:
void	pnoiseVector(float *r,const float *arg,const float *periods) {
	r[0]	=	pnoise<float>(arg[0],arg[1],arg[2],(int) periods[0],(int) periods[1],(int) periods[2],permX);
	r[1]	=	pnoise<float>(arg[0],arg[1],arg[2],(int) periods[0],(int) periods[1],(int) periods[2],permY);
	r[2]	=	pnoise<float>(arg[0],arg[1],arg[2],(int) periods[0],(int) periods[1],(int) periods[2],permZ);
}

///////////////////////////////////////////////////////////////////////
// Function				:	pnoiseVector4D
// Description			:
// Return Value			:
// Comments				:
void	pnoiseVector(float *r,const float *arg,float w,const float *periods,float wperiod) {
	r[0]	=	pnoise<float>(arg[0],arg[1],arg[2],w,(int) periods[0],(int) periods[1],(int) periods[2],(int) wperiod,permX);
	r[1]	=	pnoise<float>(arg[0],arg[1],arg[2],w,(int) periods[0],(int) periods[1],(int) periods[2],(int) wperiod,permY);
	r[2]	=	pnoise<float>(arg[0],arg[1],arg[2],w,(int) periods[0],(int) periods[1],(int) periods[2],(int) wperiod,permZ);
}

// Musc macro to permute the inputs
#define	permute(__val)																\
	if (__val < 0)	i = permN[	(i + ((unsigned int) (__val - 1))) & 4095	];		\
	else			i = permN[	(i + ((unsigned int) __val)) & 4095	];

///////////////////////////////////////////////////////////////////////
// Function				:	cellNoiseFloat1D
// Description			:	Fast cell noise implementation
// Return Value			:
// Comments				:
float	cellNoiseFloat(float arg) {
	unsigned int	i	=	0;

	permute(arg);

	return	randN[i];
}

///////////////////////////////////////////////////////////////////////
// Function				:	cellNoiseFloat2D
// Description			:
// Return Value			:
// Comments				:
float	cellNoiseFloat(float u,float v) {
	unsigned int	i	=	0;

	permute(u);
	permute(v);

	return	randN[i];
}

///////////////////////////////////////////////////////////////////////
// Function				:	cellNoiseFloat3D
// Description			:
// Return Value			:
// Comments				:
float	cellNoiseFloat(const float *arg) {
	unsigned int	i	=	0;

	permute(arg[0]);
	permute(arg[1]);
	permute(arg[2]);

	return	randN[i];
}

///////////////////////////////////////////////////////////////////////
// Function				:	cellNoiseFloat4D
// Description			:
// Return Value			:
// Comments				:
float	cellNoiseFloat(const float *arg,float w) {
	unsigned int	i	=	0;

	permute(arg[0]);
	permute(arg[1]);
	permute(arg[2]);
	permute(w);

	return	randN[i];
}

///////////////////////////////////////////////////////////////////////
// Function				:	cellNoiseVector1D
// Description			:
// Return Value			:
// Comments				:
void	cellNoiseVector(float *r,float arg) {
	unsigned int	i	=	0;

	permute(arg);

	r[0]	=	randN[i];
	r[1]	=	randN[permN[i]];
	r[2]	=	randN[permN[permN[i]]];
}

///////////////////////////////////////////////////////////////////////
// Function				:	cellNoiseVector2D
// Description			:
// Return Value			:
// Comments				:
void	cellNoiseVector(float *r,float u,float v) {
	unsigned int	i	=	0;

	permute(u);
	permute(v);

	r[0]	=	randN[i];
	r[1]	=	randN[permN[i]];
	r[2]	=	randN[permN[permN[i]]];
}

///////////////////////////////////////////////////////////////////////
// Function				:	cellNoiseVector3D
// Description			:
// Return Value			:
// Comments				:
void	cellNoiseVector(float *r,const float *arg) {
	unsigned int	i	=	0;

	permute(arg[0]);
	permute(arg[1]);
	permute(arg[2]);

	r[0]	=	randN[i];
	r[1]	=	randN[permN[i]];
	r[2]	=	randN[permN[permN[i]]];
}

///////////////////////////////////////////////////////////////////////
// Function				:	cellNoiseVector4D
// Description			:
// Return Value			:
// Comments				:
void	cellNoiseVector(float *r,const float *arg,float w) {
	unsigned int	i	=	0;

	permute(arg[0]);
	permute(arg[1]);
	permute(arg[2]);
	permute(w);

	r[0]	=	randN[i];
	r[1]	=	randN[permN[i]];
	r[2]	=	randN[permN[permN[i]]];
}